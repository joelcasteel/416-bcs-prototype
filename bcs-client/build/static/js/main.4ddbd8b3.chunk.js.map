{"version":3,"sources":["pages/planner/planner.module.css","pages/login/login.module.css","pages/event/eventpage.module.css","pages/services/servicepage.module.css","pages/volunteer/volunteer.module.css","pages/main/eventfeed.module.css","pages/payment/payment.module.css","pages/donate/donate.module.css","pages/main/EventFeed.js","pages/main/ServiceFeed.js","pages/main/index.jsx","pages/NavBar.js","pages/login/index.jsx","pages/planner/index.jsx","pages/payment/index.jsx","pages/event/index.jsx","pages/donate/index.jsx","pages/volunteer/index.jsx","pages/services/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","EventFeed","state","eventsLoaded","events","error","eventLink","srcEvent","to","_uuid","title","eventList","map","event","index","start","Date","startDate","toString","end","endDate","description","toUTCString","a","fetch","method","headers","response","console","log","json","this","setState","className","styles","eventfeed","Component","ServiceFeed","servicesLoaded","services","serviceLink","srcService","serviceList","service","cost","costPeriod","MainPage","NavBar","onLogoutclick","props","onLogoutSubmit","loginText","loggedIn","username","onClick","LoginPage","password","onUsernameChange","target","value","onPasswordChange","onLoginButton","JSON","stringify","status","body","sessionStorage","setItem","token","header","parse","window","atob","split","payload","role","onLoginSubmit","onRegisterButton","onRegisterSubmit","redirectBack","nextPage","popNext","logindiv","loginfeed","id","colSpan","entry","type","onChange","buttonrow","login_button_cell","loginbutton","register_button_cell","registerbutton","testEvents","require","Planner","name","participants","currentEvent","onNameChange","onStartTimeChange","onEndTimeChange","onParticipantsChange","onServicesChange","onDescriptionChange","onSavePressed","newEvent","onClearPressed","onEditClick","editEvent","eventTable","feed_div","event_feed","eventFeed","private","eventName","testEvent","startTime","endTime","planner_div","planner_table","entry_prompt","pattern","control_cell","PaymentBar","onCardNumberUpdate","cardNum","onCardNameUpdate","cardName","onExpirMonthUpdate","expirMonth","onExpirYearUpdate","expirYear","onPaymentSubmit","sending","pmt","parseInt","getItem","getPayments","message","onPaymentSelect","payment","paymentLoaded","paymentOptions","i","pmtOptions","substring","slice","push","label","payment_table","options","isSearchable","new_payment","min","max","EventPage","cNum","repeat","pmtChooser","paymentRequired","eventID","cardNumber","registered","registration","pmtReq","reg_table","count","maxSlots","paymentProvided","reg_div","currentEventDisplay","details_div","details_table","info","planner","pathname","location","eventLoaded","regs","reg","checkPmtReq","card","DonationPage","donate_div","donate_table","current","upcoming","VolunteerPage","currentList","oppName","opp","volunteerNeeds","totalSlots","remainingSlots","upcomingList","redirectLogin","addNext","volunteer_div","volunteer_list","ServicePage","currentService","currentServiceDisplay","serviceLoaded","App","page","document","exact","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4ddbd8b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"planner_div\":\"planner_planner_div__2Buh9\",\"planner_table\":\"planner_planner_table__1lQrd\",\"entry_prompt\":\"planner_entry_prompt__BB0o3\",\"control_cell\":\"planner_control_cell__2yOgP\",\"description\":\"planner_description__2PY3s\",\"name\":\"planner_name__M6dy7\",\"start\":\"planner_start__mAOZa\",\"end\":\"planner_end__1GoCq\",\"participants\":\"planner_participants__d1TfE\",\"services\":\"planner_services__3Q9T_\",\"feed_div\":\"planner_feed_div__2nXc8\",\"event_feed\":\"planner_event_feed__1FjjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logindiv\":\"login_logindiv__2lyMY\",\"loginfeed\":\"login_loginfeed__2VZuP\",\"username\":\"login_username__11JhW\",\"password\":\"login_password__1o_F_\",\"entry\":\"login_entry__1UeXW\",\"buttonrow\":\"login_buttonrow__1zB-z\",\"login_button_cell\":\"login_login_button_cell__2ncw0\",\"register_button_cell\":\"login_register_button_cell__2TNMB\",\"loginbutton\":\"login_loginbutton__3ZEhI\",\"registerbutton\":\"login_registerbutton__34Rin\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details_div\":\"eventpage_details_div__heySG\",\"reg_div\":\"eventpage_reg_div__1mHO-\",\"payment_table\":\"eventpage_payment_table__1vu32\",\"new_payment\":\"eventpage_new_payment__3D9mD\",\"reg_table\":\"eventpage_reg_table__2atqK\",\"details_table\":\"eventpage_details_table__2McFG\",\"description\":\"eventpage_description__2L_7Q\",\"info\":\"eventpage_info__1Pmoc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details_div\":\"servicepage_details_div__cbYI_\",\"reg_div\":\"servicepage_reg_div__245wU\",\"payment_table\":\"servicepage_payment_table__3Pku-\",\"new_payment\":\"servicepage_new_payment__3kFrQ\",\"reg_table\":\"servicepage_reg_table__2VzaT\",\"details_table\":\"servicepage_details_table__3uOhK\",\"description\":\"servicepage_description__5La7x\",\"info\":\"servicepage_info__fVNoi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"volunteer_div\":\"volunteer_volunteer_div__K_j39\",\"volunteer_list\":\"volunteer_volunteer_list__2_9sw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedDiv\":\"eventfeed_feedDiv__Ichvb\",\"eventfeed\":\"eventfeed_eventfeed__2QGIS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"payment_table\":\"payment_payment_table__1P5-L\",\"new_payment\":\"payment_new_payment__3rXvB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"donate_div\":\"donate_donate_div__2me51\",\"donate_table\":\"donate_donate_table__30ETH\"};","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport styles from './eventfeed.module.css'\r\n\r\nclass EventFeed extends Component {\r\n\r\n    state = {\r\n        eventsLoaded: false,\r\n        events: null,\r\n        error: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let response = await fetch(\r\n                '/api/event',\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n            });\r\n            console.log(response);\r\n\r\n            let events = await response.json();\r\n\r\n            console.log(events);\r\n\r\n            this.setState({\r\n                eventsLoaded: true,\r\n                events: events\r\n            });\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({\r\n                error:error\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    eventLink = (srcEvent) => {\r\n        return <td><Link to={'/event/' + srcEvent._uuid}>{srcEvent.title}</Link></td>\r\n    }\r\n\r\n    eventList = () => {\r\n        return this.state.events.map((event, index) => {\r\n            \r\n            let start = new Date(event.startDate.toString());\r\n            let end = new Date(event.endDate.toString());\r\n\r\n            return (\r\n                <tr key={index}>\r\n                    {this.eventLink(event)}\r\n                    <td>{event.description}</td>\r\n                    <td>{start.toUTCString()}</td>\r\n                    <td>{end.toUTCString()}</td>\r\n                </tr>\r\n            )\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.state.eventsLoaded && this.state.error === null) {\r\n            return (\r\n                <div className=\"feedDiv\">\r\n                    <table className={styles.eventfeed}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th key='eventName'>Event Name</th>\r\n                                <th key='eventdescript'>Event Type</th>\r\n                                <th key='startTime'>Start Time</th>\r\n                                <th key='endTime'>End Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.eventList()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        } else if(this.state.error) {\r\n            return (\r\n                <div>Error Loading Events</div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>Loading Events</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventFeed;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport styles from './eventfeed.module.css'\r\n\r\nclass ServiceFeed extends Component {\r\n\r\n    state = {\r\n        servicesLoaded: false,\r\n        services: null,\r\n        error: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let response = await fetch(\r\n                '/api/service',\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n            });\r\n            console.log(response);\r\n\r\n            let services = await response.json();\r\n\r\n            console.log(services);\r\n\r\n            this.setState({\r\n                servicesLoaded: true,\r\n                services: services\r\n            });\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({\r\n                error:error\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    serviceLink = (srcService) => {\r\n        return <td><Link to={'/service/' + srcService._uuid}>{srcService.title}</Link></td>\r\n    }\r\n\r\n    serviceList = () => {\r\n        return this.state.services.map((service, index) => {\r\n            \r\n            \r\n\r\n            return (\r\n                <tr key={index}>\r\n                    {this.serviceLink(service)}\r\n                    <td>{service.description}</td>\r\n                    <td>{service.cost}</td>\r\n                    <td>{service.costPeriod}</td>\r\n                </tr>\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.servicesLoaded && this.state.error === null) {\r\n            return (\r\n                <div className=\"feedDiv\">\r\n                    <table className={styles.eventfeed}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th key='serviceName'>Service Name</th>\r\n                                <th key='serviceDescript'>Service Type</th>\r\n                                <th key='serviceCost'>Service Cost </th>\r\n                                <th key='servicePeriod'>Cost Period</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.serviceList()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        } else if(this.state.error) {\r\n            return (\r\n                <div>Error Loading Services</div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>Loading services</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default ServiceFeed;","import React from 'react';\r\n\r\nimport EventFeed from './EventFeed';\r\nimport ServiceFeed from './ServiceFeed';\r\n\r\nconst MainPage = () => (\r\n    <div>\r\n        <br/><br/>\r\n        <h1>Best Community Service</h1>\r\n        <p>\r\n            Best Community Service is dedicated to making an impact locally through our many events\r\n            and volunteering opportunities.\r\n        </p>\r\n        <br/><br/>\r\n        <h2>Event Schedule</h2>\r\n        <EventFeed/>\r\n        <br/>\r\n        <br/>\r\n        <h2>Services Provided</h2>\r\n        <ServiceFeed/>\r\n    </div>\r\n)\r\n\r\nexport default MainPage;","import React, {Component, Fragment} from 'react';\r\nimport { Redirect} from 'react-router';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport'./navbar.css';\r\n\r\nclass NavBar extends Component {\r\n\r\n    state = {\r\n        //loggedIn: false\r\n    }\r\n\r\n    onLogoutclick = event => {\r\n        this.props.onLogoutSubmit();\r\n    };\r\n\r\n\r\n    loginText = () => {\r\n        if(!this.props.loggedIn) {\r\n            return <Link to=\"/login\"><b>Login/Register</b></Link>;\r\n            \r\n        }\r\n\r\n        return <Fragment>Welcome, {this.props.username}. <Link onClick={this.onLogoutclick} to='/'><b>Logout</b></Link></Fragment>;\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table className='navbar'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className='logo' key='logo'><b>Best Community Service</b></td>\r\n                            <td key='pad0'></td>\r\n                            <td key='home'><Link to=\"/\"><b>Home</b></Link></td>\r\n                            <td key='planner'><Link to=\"/planner\"><b>Event Planner</b></Link></td>\r\n                            <td key='volunteer'><Link to=\"/volunteer\"><b>Volunteer</b></Link></td>\r\n                            <td key='donate'><Link to=\"/donate\"><b>Donate</b></Link></td>\r\n                            <td key='pad1'></td>\r\n                            <td className='login' key='login'>{this.loginText()}</td>\r\n                            \r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, {Component} from 'react';\r\nimport {Redirect, useHistory} from 'react-router-dom';\r\n\r\nimport styles from './login.module.css';\r\n\r\nclass LoginPage extends Component {\r\n\r\n    \r\n\r\n    state = {\r\n        username: null,\r\n        password: null,\r\n        loggedIn: false,\r\n        error: null\r\n    }\r\n\r\n    onUsernameChange = event => {\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n\r\n    onPasswordChange = event => {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    onLoginButton = async (event) => {\r\n        if(this.state.username && this.state.password) {\r\n            try {\r\n                let response = await fetch('/login', {\r\n                    'method': \"POST\",\r\n                    'headers': {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    'body': JSON.stringify({\r\n                        'username': this.state.username,\r\n                        'password': this.state.password\r\n                    })\r\n                });\r\n\r\n                if(response.status === 201) {\r\n                    let body = await response.json();\r\n                    sessionStorage.setItem(\"token\", body.token);\r\n                    let token = {};\r\n\r\n                    token.header = JSON.parse(window.atob(body.token.split('.')[0]));\r\n                    token.payload = JSON.parse(window.atob(body.token.split('.')[1]));\r\n\r\n                    sessionStorage.setItem(\"username\", token.payload.username);\r\n                    sessionStorage.setItem(\"role\", token.payload.role);\r\n\r\n                    this.props.onLoginSubmit(token.payload.username, token.payload.role);\r\n                }\r\n\r\n            } catch(error) {\r\n                console.log(error);\r\n                this.setState({\r\n                    error: error\r\n                });\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    onRegisterButton = async (event) => {\r\n        if(this.state.username && this.state.password) {\r\n            try {\r\n                let response = await fetch('/register', {\r\n                    'method': \"POST\",\r\n                    'headers': {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    'body': JSON.stringify({\r\n                        'username': this.state.username,\r\n                        'password': this.state.password\r\n                    })\r\n                });\r\n\r\n                if(response.status === 201) {\r\n                    let body = await response.json();\r\n                    sessionStorage.setItem(\"token\", body.token);\r\n\r\n                    let token = {}\r\n\r\n                    token.header = JSON.parse(window.atob(body.token.split('.')[0]));\r\n                    token.payload = JSON.parse(window.atob(body.token.split('.')[1]));\r\n\r\n                    sessionStorage.setItem(\"username\", token.payload.username);\r\n                    sessionStorage.setItem(\"role\", token.payload.role);\r\n\r\n                    this.props.onRegisterSubmit(token.payload.username, token.payload.role);\r\n                }\r\n\r\n            } catch(error) {\r\n                console.log(error);\r\n                this.setState({\r\n                    error: error\r\n                });\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    redirectBack = () => {\r\n        let nextPage = this.props.popNext();\r\n            return (\r\n                <Redirect to={nextPage}/>\r\n            )\r\n    }\r\n\r\n\r\n    render() {\r\n        if(!this.props.loggedIn) {\r\n            return (\r\n                <div>\r\n                    <h1>Login</h1>\r\n                    <div className={styles.logindiv}>\r\n                    <table className={styles.loginfeed}>\r\n                        <tbody>\r\n                            <tr key='username'>\r\n                                <td id={styles.username} colSpan='2'>\r\n                                    <b>Username</b><br/>\r\n                                    <input className={styles.entry} type='text' onChange={this.onUsernameChange}></input>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td id={styles.password} colSpan='2'>\r\n                                    <b>Password</b><br/>\r\n                                    <input className={styles.entry} type='password' onChange={this.onPasswordChange}></input>\r\n                                </td>\r\n                            </tr>\r\n                            <tr id={styles.buttonrow}>\r\n                                <td id={styles.login_button_cell}>\r\n                                    <button id={styles.loginbutton} onClick={this.onLoginButton}><b>Login</b></button>\r\n                                </td>\r\n                                <td id={styles.register_button_cell}>\r\n                                    <button id={styles.registerbutton} onClick={this.onRegisterButton}><b>Register</b></button>\r\n                                </td>\r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {this.redirectBack()}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default LoginPage;","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport styles from './planner.module.css';\r\n\r\nconst testEvents = require('../../testEvents.json');\r\n\r\nclass Planner extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        start: '',\r\n        end: '',\r\n        participants: 0,\r\n        services: '',\r\n        description: '',\r\n\r\n        currentEvent: null\r\n    }\r\n\r\n    onNameChange = event => {\r\n        this.setState({\r\n            name: event.target.value\r\n        });\r\n    }\r\n\r\n    onStartTimeChange = event => {\r\n        this.setState({\r\n            start: event.target.value\r\n        });\r\n    }\r\n    \r\n    onEndTimeChange = event => {\r\n        this.setState({\r\n            end: event.target.value\r\n        });\r\n    }\r\n\r\n    onParticipantsChange = event => {\r\n        this.setState({\r\n            participants: event.target.value\r\n        });\r\n    }\r\n\r\n    onServicesChange = event => {\r\n        this.setState({\r\n            services: event.target.value\r\n        });\r\n    }\r\n\r\n    onDescriptionChange = event => {\r\n        this.setState({\r\n            description: event.target.value\r\n        });\r\n    }\r\n\r\n    onSavePressed = event => {\r\n        let newEvent = {\r\n            name: this.state.name,\r\n            start: new Date(this.state.start),\r\n            end: new Date(this.state.end),\r\n            participants: this.state.participants,\r\n            services: this.state.services,\r\n            description: this.state.description\r\n        };\r\n\r\n        this.setState({\r\n            name: '',\r\n            start: '',\r\n            end: '',\r\n            participants: 0,\r\n            services: '',\r\n            description: '',\r\n\r\n            currentEvent: newEvent\r\n        });\r\n    }\r\n\r\n    onClearPressed = event => {\r\n        this.setState({\r\n            name: '',\r\n            start: '',\r\n            end: '',\r\n            participants: 0,\r\n            services: '',\r\n            description: ''\r\n        });\r\n    }\r\n\r\n    onEditClick = function(editEvent) {\r\n\r\n\r\n        this.setState({\r\n            name: editEvent.name,\r\n            start: editEvent.start,\r\n            end: editEvent.start,\r\n            participants: editEvent.participants,\r\n            services: editEvent.services,\r\n            description: editEvent.description\r\n        });\r\n    }\r\n\r\n    eventTable = () => {\r\n        return (\r\n            <div className={styles.feed_div}>\r\n                <table className={styles.event_feed}>\r\n                <thead>\r\n                        <tr>\r\n                            <th key='eventName'>Event Name</th>\r\n                            <th key='start'>Start Time</th>\r\n                            <th key='end'>End Time</th>\r\n                            <th key='participants'>Participants</th>\r\n                            <th key='services'>Services</th>\r\n                            <th key='description'>Description</th>\r\n                            <th key='edit-blank'></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.eventFeed()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    eventFeed = () => {\r\n        return testEvents.private.map((eventName, index) => {\r\n            let testEvent = testEvents.events[eventName];\r\n            return (\r\n                <tr key={index}>\r\n                    <td>{testEvent.name}</td>\r\n                    <td>{new Date(testEvent.startTime).toUTCString()}</td>\r\n                    <td>{new Date(testEvent.endTime).toUTCString()}</td>\r\n                    <td>{testEvent.participants}</td>\r\n                    <td>{testEvent.services}</td>\r\n                    <td>{testEvent.description}</td>\r\n                    <td key='edit'><button onClick={() => this.onEditClick(testEvent)}>Edit</button></td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n            return (\r\n                <div>\r\n                    <div className={styles.planner_div}>\r\n                        <h3>Create Event</h3>\r\n                        <table className={styles.planner_table}>\r\n                            <tbody>\r\n                                <tr key=\"event-name\">\r\n                                    <td className={styles.entry_prompt}>Event Name</td>\r\n                                    <td colSpan='3'><input id={styles.name} type='text' value={this.state.name} onChange={this.onNameChange}></input></td>\r\n                                </tr>\r\n                                <tr key=\"event-time\">\r\n                                    <td className={styles.entry_prompt}>Start Time</td>\r\n                                    <td><input id={styles.start} type='datetime-local' value={this.state.start} onChange={this.onStartTimeChange}></input></td>\r\n                                    <td className={styles.entry_prompt}>End Time</td>\r\n                                    <td><input id={styles.end} type='datetime-local' value={this.state.end} onChange={this.onEndTimeChange}></input></td>\r\n                                </tr>\r\n                                <tr key=\"event-details\">\r\n                                    <td className={styles.entry_prompt}>Participants</td>\r\n                                    <td><input id={styles.participants} type='text' pattern='^[0-9]*$' value={this.state.participants} onChange={this.onParticipantsChange}></input></td>\r\n                                    <td className={styles.entry_prompt}>Additional Services Requested</td>\r\n                                    <td><input id={styles.services} type='text' value={this.state.services} onChange={this.onServicesChange}></input></td>\r\n                                </tr>\r\n                                <tr key=\"event-description\">\r\n                                    <td className={styles.entry_prompt}>Description</td>\r\n                                    <td colSpan='3'><textarea id={styles.description} value={this.state.description} onChange={this.onDescriptionChange}></textarea></td>\r\n                                    \r\n                                </tr>\r\n                            </tbody>\r\n                            <tfoot>\r\n                                <tr>\r\n                                    <td className={styles.control_cell} colSpan='2'>\r\n                                        <button onClick={this.onSavePressed}>\r\n                                            Save Event\r\n                                        </button>\r\n                                    </td>\r\n                                    <td className={styles.control_cell} colSpan='2'>\r\n                                    <button onClick={this.onClearPressed}>\r\n                                            Clear Event\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tfoot>\r\n                        </table>\r\n                    </div>\r\n                    <div>\r\n                        <h3>Planned Events</h3>\r\n                        <div>\r\n                            {this.eventTable()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Planner;","import React, {Component, Fragment} from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport Select from 'react-select';\r\n\r\nimport styles from './payment.module.css';\r\n\r\n\r\nclass PaymentBar extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            payment: null,\r\n            paymentLoaded: false,\r\n            paymentOptions: null,\r\n\r\n            cardNum: \"\",\r\n            cardName: \"\",\r\n            expirMonth: 1,\r\n            expirYear: 2021,\r\n            sending: false,\r\n            error: null,\r\n\r\n            message: \"\"\r\n        }\r\n    }\r\n\r\n    async getPayments() {\r\n        try {\r\n            let token = window.sessionStorage.getItem('token');\r\n            let response = await fetch(\r\n                '/api/payment/', \r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization':'Bearer ' + token\r\n                    }\r\n            });\r\n            console.log(response);\r\n            let payment = await response.json();\r\n            console.log(payment);\r\n\r\n            let pmtOptions = [];\r\n\r\n            for(let i in payment) {\r\n                let substring = payment[i].cardNum.toString();\r\n                substring = substring.slice(0,4) + \" **** **** ****\";\r\n                pmtOptions.push(\r\n                    {\r\n                        value: payment[i],\r\n                        label: substring\r\n                    }\r\n                )\r\n\r\n            }\r\n\r\n            this.setState({\r\n                paymentLoaded: true,\r\n                payment: payment,\r\n                paymentOptions: pmtOptions\r\n            });\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({error:error});\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getPayments();\r\n    }\r\n\r\n\r\n    onCardNumberUpdate = event => {\r\n        this.setState({\r\n            cardNum: event.target.value\r\n        });\r\n    }\r\n\r\n    onCardNameUpdate = event => {\r\n        this.setState({\r\n            cardName: event.target.value\r\n        });\r\n    }\r\n\r\n    onExpirMonthUpdate = event => {\r\n        this.setState({\r\n            expirMonth: event.target.value\r\n        });\r\n    }\r\n\r\n    onExpirYearUpdate = event => {\r\n        this.setState({\r\n            expirYear: event.target.value\r\n        });\r\n    }\r\n\r\n    onPaymentSubmit = async(event) => {\r\n        this.setState({sending: true});\r\n        let pmt = {\r\n            'cardNum': this.state.cardNum,\r\n            'name': this.state.cardName,\r\n            'expirMonth': parseInt(this.state.expirMonth),\r\n            'expirYear': parseInt(this.state.expirYear)\r\n        };\r\n\r\n        try {\r\n            let token = window.sessionStorage.getItem('token');\r\n            let response = await fetch('/api/payment/',\r\n                {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization':'Bearer ' + token\r\n                },\r\n                body: JSON.stringify(pmt)\r\n            });\r\n\r\n            if(response.status === 201) {\r\n                this.getPayments();\r\n                this.setState({\r\n                    message: \"Payment saved successfully\"\r\n                });\r\n\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.setState({\r\n                error: error,\r\n                message: \"Error saving payment\"\r\n            });\r\n        }\r\n    }\r\n\r\n    onPaymentSelect = pmt => {\r\n        this.props.onPaymentSelect(pmt);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table className={styles.payment_table}> \r\n                <tbody>\r\n                    <tr>\r\n                        <td colSpan=\"1\">\r\n                            <h3>Select Payment</h3><br/>\r\n                            <Select \r\n                                options={this.state.paymentOptions}\r\n                                isSearchable={true}\r\n                                onChange={this.onPaymentSelect}\r\n                            />\r\n                        </td>\r\n                        <td colSpan=\"1\" className={styles.new_payment}>\r\n                            <h3>Add New Payment Method</h3><br/>\r\n\r\n                            <p>{this.state.message}</p>\r\n\r\n                            <b>Card Number</b><br/>\r\n                            <input type=\"text\" onChange={this.onCardNumberUpdate} value={this.state.cardNum}></input><br/><br/>\r\n\r\n                            <b>Cardholder Name</b><br/>\r\n                            <input type=\"text\" onChange={this.onCardNameUpdate} value={this.state.cardName}></input><br/><br/>\r\n\r\n                            <b>Expiration Month</b><br/>\r\n                            <input type=\"number\" min=\"1\" max=\"12\" onChange={this.onExpirMonthUpdate} value={this.state.expirMonth}></input><br/><br/>\r\n\r\n                            <b>Expiration Year</b><br/>\r\n                            <input type=\"number\" min=\"2021\" max=\"2050\" onChange={this.onExpirYearUpdate} value={this.state.expirYear}></input><br/><br/>\r\n                            <button onClick={this.onPaymentSubmit}>Save Payment</button>\r\n                            \r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n    );\r\n    }\r\n}\r\n\r\nexport default PaymentBar;","import React, {Component, Fragment} from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport Select from 'react-select';\r\n\r\nimport PaymentBar from '../payment';\r\n\r\nimport styles from './eventpage.module.css';\r\n\r\nlet testEvents = require('../../testEvents.json').events;\r\n\r\nclass EventPage extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        let pathname = window.location.pathname.slice(7);\r\n        console.log(pathname);\r\n\r\n        this.state = {\r\n            pathname: pathname,\r\n\r\n            currentEvent: null,\r\n            eventLoaded: false,\r\n\r\n            paymentRequired: false,\r\n            pmt: \"\",\r\n            \r\n\r\n            payment: null,\r\n            paymentProvided: \"\",\r\n            paymentLoaded: false,\r\n            paymentOptions: null,\r\n\r\n            cardNum: \"\",\r\n            cardName: \"\",\r\n            expirMonth: 1,\r\n            expirYear: 2021,\r\n\r\n            error: null,\r\n            message: \"\",\r\n            registered: false,\r\n        }\r\n    }\r\n\r\n    checkRegistered() {\r\n        let username = sessionStorage.getItem(\"username\");\r\n\r\n            for(let i in this.state.currentEvent.regs) {\r\n                let reg = this.state.currentEvent.regs[i];\r\n                console.log(reg);\r\n                if(reg.username === username) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let response = await fetch(\r\n                '/api/event/' + this.state.pathname,\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n            });\r\n            console.log(response);\r\n\r\n            let event = await response.json();\r\n\r\n            console.log(event);\r\n\r\n\r\n            this.setState({\r\n                eventLoaded: true,\r\n                currentEvent: event\r\n            });\r\n\r\n            this.checkPmtReq();\r\n\r\n        if(this.props.loggedIn) {\r\n            console.log(\"HELLO\");\r\n            let username = sessionStorage.getItem(\"username\");\r\n            for(let i in event.regs) {\r\n                let reg = event.regs[i];\r\n                console.log(reg);\r\n                if(reg.username === username) {\r\n                    let card = reg.cardNum.slice(0,4) + \" **** **** ****\";\r\n                    this.setState({\r\n                        registered: true,\r\n                        paymentProvided: card\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({\r\n                error:error\r\n            });\r\n        }\r\n    }\r\n\r\n    onPaymentSelect = (pmt) =>  {\r\n        let cNum = pmt.value.cardNum.repeat(1);\r\n        this.setState({\r\n            payment: cNum\r\n        });\r\n    }\r\n\r\n\r\n    checkPmtReq() {\r\n        if(this.state.currentEvent.cost > 0) {\r\n            this.setState({\r\n                paymentRequired: true\r\n            });\r\n        }\r\n    }\r\n\r\n    pmtChooser = () => {\r\n        if(this.state.paymentRequired) {\r\n            return <PaymentBar onPaymentSelect={this.onPaymentSelect}/>\r\n        }\r\n        return \"\"\r\n    }\r\n\r\n    onRegisterSubmit = async (event) => {\r\n        try {\r\n            console.log(this.state.payment);\r\n            if(this.state.payment !== null || !this.state.paymentRequired){\r\n                let token = window.sessionStorage.getItem('token');\r\n                let response = await fetch('/api/reg', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization':'Bearer ' + token\r\n                    },\r\n                    body: JSON.stringify({\r\n                        eventID: this.state.currentEvent._uuid,\r\n                        cardNumber: this.state.payment\r\n                    })\r\n                });\r\n                if(response.status === 201) {\r\n                    this.setState({\r\n                        message: \"Registration added.\",\r\n                        registered: true\r\n                    })\r\n                }\r\n            } else if(this.state.paymentRequired) {\r\n                this.setState({\r\n                    message: \"Payment Required.\",\r\n                })\r\n            }\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({\r\n                message: \"Error saving registration\"\r\n            });\r\n        }\r\n    }\r\n\r\n    registration = () => {\r\n        let pmtReq = \"No\";\r\n        if(this.state.paymentRequired) {\r\n            pmtReq = \"Yes\";\r\n        }\r\n\r\n\r\n        if(this.props.loggedIn) {\r\n            let username = sessionStorage.getItem(\"username\");\r\n\r\n\r\n            if(this.state.registered) {\r\n                return (\r\n                    <div>\r\n                        <h3>Already Registered for Event</h3>\r\n                        <table className={styles.reg_table}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <b>Username</b><br/>\r\n                                        {username}\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Slots Taken</b><br/>\r\n                                        {this.state.currentEvent.count}/{this.state.currentEvent.maxSlots}\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Payment Provided</b><br/>\r\n                                        {this.state.paymentProvided}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )\r\n            } else {\r\n\r\n                return (\r\n                    <div className={styles.reg_div}>\r\n                        <h2>Register for Event</h2>\r\n                        <table className={styles.reg_table}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <b>Username</b><br/>\r\n                                        {username}\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Slots Taken</b><br/>\r\n                                        {this.state.currentEvent.count}/{this.state.currentEvent.maxSlots}\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Payment Required</b><br/>\r\n                                        {pmtReq}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {this.pmtChooser()}\r\n                        <br/>\r\n                        <p>{this.state.message}</p>\r\n                        <br/>\r\n                        <button onClick={this.onRegisterSubmit}>Register</button><br/><br/>\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <h3>Login to Register</h3>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n    currentEventDisplay = () => {\r\n        return (\r\n            <div className={styles.details_div}>\r\n                <h1>{this.state.currentEvent.title}</h1>\r\n                <table className={styles.details_table}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th key=\"start\">Start Time</th>\r\n                            <th key=\"end\">End Time</th>\r\n                            <th key=\"attendees\">Max Attendees</th>\r\n                            <th key=\"planner\">Planner</th>\r\n                            <th key=\"cost\">Cost</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className={styles.info}>{new Date(this.state.currentEvent.startDate.toString()).toUTCString()}</td>\r\n                            <td className={styles.info}>{new Date(this.state.currentEvent.endDate.toString()).toUTCString()}</td>\r\n                            <td className={styles.info}>{this.state.currentEvent.maxSlots}</td>\r\n                            <td className={styles.info}>{this.state.currentEvent.planner}</td>\r\n                            <td className={styles.info}>${this.state.currentEvent.cost}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td id={styles.description} colSpan='5'>\r\n                                <b>Description:</b><br/>\r\n                                <p>{this.state.currentEvent.description}</p>\r\n                            </td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render () {\r\n        if(this.state.eventLoaded && this.state.error === null) {\r\n            return (\r\n                <div>\r\n                    {this.currentEventDisplay()}\r\n                    <br/><br/>\r\n                    {this.registration()}\r\n                </div>\r\n            )\r\n        } else if(this.state.error) {\r\n            return (\r\n                <div>\r\n                    Error fetching event\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>Loading event details</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventPage;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport styles from './donate.module.css';\r\n\r\nclass DonationPage extends Component {\r\n    render () {\r\n        return (\r\n            <div className={styles.donate_div}>\r\n                <h1>Donations</h1>\r\n                <p>\r\n                    Here at Best Community Service, we are dedicated to making the most of what we're given.<br/>\r\n                    To make a donation please download, fill out, and upload a donation form.<br/>\r\n                    We'll contact you to complete the process.\r\n                </p>\r\n                <table className={styles.donate_table}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th><b>Download Donation Forms</b></th>\r\n                            <th><b>Upload Donation Forms</b></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <Link>BCS_Donation_Form_2021.pdf</Link>\r\n                            </td>\r\n                            <td>\r\n                                <input type='file'/>\r\n                                <br/>\r\n                                <button>Submit</button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DonationPage;","import React, {Component} from 'react';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport styles from './volunteer.module.css';\r\nlet testEvents = require('../../testEvents.json');\r\n\r\n\r\nlet current = [\r\n    [testEvents['public'][0], \"Approved\"],\r\n    [testEvents['public'][1], \"Pending\"]\r\n];\r\n\r\nlet upcoming = [\r\n    testEvents['public'][2],\r\n    testEvents['public'][3]\r\n];\r\n\r\nclass VolunteerPage extends Component {\r\n\r\n\r\n    currentList = () => {\r\n        return current.map((oppName, i) => {\r\n            console.log(oppName)\r\n            let opp = testEvents.events[oppName[0]];\r\n            return (\r\n                <tr key={i}>\r\n                    <td>{opp.name}</td>\r\n                    <td colSpan='2'>{opp.volunteerNeeds}</td>\r\n                    <td>{oppName[1]}</td>\r\n                    <td>{opp.startTime}</td>\r\n                    <td>{opp.endTime}</td>\r\n                    <td>{opp.totalSlots}</td>\r\n                    <td>{opp.remainingSlots}</td>\r\n                    <td><button>Remove Application</button></td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    upcomingList = () => {\r\n        return upcoming.map((oppName, i) => {\r\n            let opp = testEvents.events[oppName];\r\n            return(\r\n                <tr key={i}>\r\n                    <td>{opp.name}</td>\r\n                    <td colSpan='2'>{opp.volunteerNeeds}</td>\r\n                    <td>{opp.startTime}</td>\r\n                    <td>{opp.endTime}</td>\r\n                    <td>{opp.totalSlots}</td>\r\n                    <td>{opp.remainingSlots}</td>\r\n                    <td><button>Submit Application</button></td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    redirectLogin = () => {\r\n        this.props.addNext('/volunteer');\r\n        return <Redirect to='/login'/>\r\n    }\r\n\r\n    render() {\r\n        if(this.props.loggedIn) {\r\n            return (\r\n                <div>\r\n                    <div className={styles.volunteer_div}>\r\n                        <h3>Current Volunteering Applications</h3>\r\n                        <table className={styles.volunteer_list}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th key='eventName'>Name</th>\r\n                                    <th key='eventNeeds' colSpan='2'>Volunteer Needs Description</th>\r\n                                    <th key='approval'>Approval Status</th>\r\n                                    <th key='startTime'>Start Time</th>\r\n                                    <th key='endTime'>End Time</th>\r\n                                    <th key='totalSlots'>Total Slots</th>\r\n                                    <th key='remainingSlots'>Remaining Slots</th>\r\n                                    <th key='button'></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.currentList()}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <br/>\r\n                    <br/>\r\n                    <div className={styles.volunteer_div}>\r\n                        <h3>Upcoming Opportunities</h3>\r\n                        <table className={styles.volunteer_list}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th key='eventName'>Name</th>\r\n                                    <th key='eventNeeds' colSpan='2'>Volunteer Needs Description</th>\r\n                                    <th key='startTime'>Start Time</th>\r\n                                    <th key='endTime'>End Time</th>\r\n                                    <th key='totalSlots'>Total Slots</th>\r\n                                    <th key='remainingSlots'>Remaining Slots</th>\r\n                                    <th key='button'></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.upcomingList()}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            )\r\n            } else {\r\n            return(\r\n                <div>\r\n                    {this.redirectLogin()}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default VolunteerPage;","import React, {Component, Fragment} from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport Select from 'react-select';\r\n\r\nimport PaymentBar from '../payment';\r\n\r\nimport styles from './servicepage.module.css';\r\n\r\nlet testEvents = require('../../testEvents.json').events;\r\n\r\nclass ServicePage extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        let pathname = window.location.pathname.slice(9);\r\n        console.log(pathname);\r\n\r\n        this.state = {\r\n            pathname: pathname,\r\n\r\n            currentService: null,\r\n            serviceLoaded: false,\r\n\r\n            paymentRequired: false,\r\n            pmt: \"\",\r\n            \r\n\r\n            payment: null,\r\n            paymentProvided: \"\",\r\n\r\n\r\n            error: null,\r\n            message: \"\",\r\n            registered: false,\r\n        }\r\n    }\r\n\r\n    checkRegistered() {\r\n        let username = sessionStorage.getItem(\"username\");\r\n\r\n            for(let i in this.state.currentService.regs) {\r\n                let reg = this.state.currentService.regs[i];\r\n                console.log(reg);\r\n                if(reg.username === username) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let response = await fetch(\r\n                '/api/service/' + this.state.pathname,\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n            });\r\n            console.log(response);\r\n\r\n            let service = await response.json();\r\n\r\n            console.log(service);\r\n\r\n\r\n            this.setState({\r\n                serviceLoaded: true,\r\n                currentService: service\r\n            });\r\n\r\n            this.checkPmtReq();\r\n\r\n        if(this.props.loggedIn) {\r\n            console.log(\"HELLO\");\r\n            let username = sessionStorage.getItem(\"username\");\r\n            for(let i in service.regs) {\r\n                let reg = service.regs[i];\r\n                console.log(reg);\r\n                if(reg.username === username) {\r\n                    let card = reg.cardNum.slice(0,4) + \" **** **** ****\";\r\n                    this.setState({\r\n                        registered: true,\r\n                        paymentProvided: card\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({\r\n                error:error\r\n            });\r\n        }\r\n    }\r\n\r\n    onPaymentSelect = (pmt) =>  {\r\n        let cNum = pmt.value.cardNum.repeat(1);\r\n        this.setState({\r\n            payment: cNum\r\n        });\r\n    }\r\n\r\n\r\n    checkPmtReq() {\r\n        if(this.state.currentService.cost > 0) {\r\n            this.setState({\r\n                paymentRequired: true\r\n            });\r\n        }\r\n    }\r\n\r\n    pmtChooser = () => {\r\n        if(this.state.paymentRequired) {\r\n            return <PaymentBar onPaymentSelect={this.onPaymentSelect}/>\r\n        }\r\n        return \"\"\r\n    }\r\n\r\n    onRegisterSubmit = async (event) => {\r\n        try {\r\n            console.log(this.state.payment);\r\n            if(this.state.payment !== null || !this.state.paymentRequired){\r\n                let token = window.sessionStorage.getItem('token');\r\n                let response = await fetch('/api/reg', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization':'Bearer ' + token\r\n                    },\r\n                    body: JSON.stringify({\r\n                        eventID: this.state.currentService._uuid,\r\n                        cardNumber: this.state.payment\r\n                    })\r\n                });\r\n                if(response.status === 201) {\r\n                    this.setState({\r\n                        message: \"Registration added.\",\r\n                        registered: true\r\n                    })\r\n                }\r\n            } else if(this.state.paymentRequired) {\r\n                this.setState({\r\n                    message: \"Payment Required.\",\r\n                })\r\n            }\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({\r\n                message: \"Error saving registration\"\r\n            });\r\n        }\r\n    }\r\n\r\n    registration = () => {\r\n        let pmtReq = \"No\";\r\n        if(this.state.paymentRequired) {\r\n            pmtReq = \"Yes\";\r\n        }\r\n\r\n\r\n        if(this.props.loggedIn) {\r\n            let username = sessionStorage.getItem(\"username\");\r\n\r\n\r\n            if(this.state.registered) {\r\n                return (\r\n                    <div>\r\n                        <h3>Already Registered for Event</h3>\r\n                        <table className={styles.reg_table}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <b>Username</b><br/>\r\n                                        {username}\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Slots Taken</b><br/>\r\n                                        {this.state.currentService.count}/{this.state.currentService.maxSlots}\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Payment Provided</b><br/>\r\n                                        {this.state.paymentProvided}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )\r\n            } else {\r\n\r\n                return (\r\n                    <div className={styles.reg_div}>\r\n                        <h2>Register for Service</h2>\r\n                        <table className={styles.reg_table}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <b>Username</b><br/>\r\n                                        {username}\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Slots Taken</b><br/>\r\n                                        {this.state.currentService.count}/{this.state.currentService.maxSlots}\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Payment Required</b><br/>\r\n                                        {pmtReq}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {this.pmtChooser()}\r\n                        <br/>\r\n                        <p>{this.state.message}</p>\r\n                        <br/>\r\n                        <button onClick={this.onRegisterSubmit}>Register</button><br/><br/>\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <h3>Login to Register</h3>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n    currentServiceDisplay = () => {\r\n        return (\r\n            <div className={styles.details_div}>\r\n                <h1>{this.state.currentService.title}</h1>\r\n                <table className={styles.details_table}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th key=\"type\">Service Type</th>\r\n                            <th key=\"cost\">Cost</th>\r\n                            <th key=\"costPeriod\">Cost Period</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr> \r\n                            <td className={styles.info}>{this.state.currentService.type}</td>\r\n                            <td className={styles.info}>{this.state.currentService.cost}</td>\r\n                            <td className={styles.info}>${this.state.currentService.costPeriod}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td id={styles.description} colSpan='3'>\r\n                                <b>Description:</b><br/>\r\n                                <p>{this.state.currentService.description}</p>\r\n                            </td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render () {\r\n        if(this.state.serviceLoaded && this.state.error === null) {\r\n            return (\r\n                <div>\r\n                    {this.currentServiceDisplay()}\r\n                    <br/><br/>\r\n                    {this.registration()}\r\n                </div>\r\n            )\r\n        } else if(this.state.error) {\r\n            return (\r\n                <div>\r\n                    Error fetching service\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>Loading service details</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default ServicePage;","import React, {Component, Fragment} from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link,\n  Redirect,\n  useHistory\n} from 'react-router-dom';\n\nimport MainPage from './pages/main';\nimport NavBar from './pages/NavBar';\nimport LoginPage from './pages/login';\nimport Planner from './pages/planner';\nimport EventPage from './pages/event';\nimport DonationPage from './pages/donate';\nimport VolunteerPage from './pages/volunteer';\nimport ServicePage from './pages/services';\n\n/**\n * This is the router class for the entire project.\n * \n * Routes are added with the following tag structure:\n * \n * <Route path=\"{Path_in_browser}\" component={Imported_Component}/>\n * \n * Router code help credits go to this article by Islem Maboud:\n * https://bit.ly/2O5x1Oz\n * \n */\nclass App extends Component {\n  state = {\n    loggedIn: false,\n    username: null,\n    role: null,\n    nextPage: null\n  };\n\n\n  onLoginSubmit = (username, role) => {\n    console.log(username + \":\" +role);\n\n    this.setState({\n      loggedIn: true,\n      username: username,\n      role: role,\n    });\n  }\n\n  onRegisterSubmit = (username, role) => {\n    console.log(username + \":\" +role);\n    this.setState({\n      loggedIn: true,\n      username: username,\n      role: role\n    });\n  }\n\n  onLogoutSubmit = () => {\n    this.setState({\n      loggedIn: false,\n      username: null,\n      role: null\n    });\n  }\n\n  addNext = (page) => {\n    this.setState({\n      nextPage: page\n    });\n  }\n\n  popNext = () => {\n    let nextPage = '/'\n\n    if(this.state.nextPage) {\n      nextPage = this.state.nextPage;\n    }\n\n    this.setState({\n      nextPage: null\n    });\n\n    return nextPage;\n  }\n\n  async componentDidMount() {\n    document.title = \"Best Community Service\";\n    try {\n      let token = window.sessionStorage.getItem(\"token\");\n      let response = await fetch(\n        '/api/check/',\n        {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':'Bearer ' + token\n            }\n    });\n    if(response.status === 200) {\n      this.setState({\n        loggedIn:true,\n        username: window.sessionStorage.getItem(\"username\")\n      });\n    }\n    } catch(error) {\n      console.log(error);\n    }\n\n  }\n\n\n\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <NavBar username={this.state.username} loggedIn={this.state.loggedIn} onLogoutSubmit={this.onLogoutSubmit}/>\n          <Switch>\n            <Route exact path=\"/\" component={MainPage}/>\n            <Route exact path=\"/login\" render={() =>\n              <LoginPage popNext={this.popNext} loggedIn={this.state.loggedIn} onLoginSubmit={this.onLoginSubmit} onRegisterSubmit={this.onRegisterSubmit}/>}\n            />\n            <Route exact path=\"/planner\" render={() =>{\n\n              if(this.state.loggedIn) {\n                return <Planner addNext={this.addNext} loggedIn={this.state.loggedIn}/>\n              } else {\n                return <LoginPage popNext={this.popNext} loggedIn={this.state.loggedIn} onLoginSubmit={this.onLoginSubmit} onRegisterSubmit={this.onRegisterSubmit}/>\n              }\n            }}/>\n            <Route exact path=\"/volunteer\" render={() =>\n              <VolunteerPage addNext={this.addNext} loggedIn={this.state.loggedIn}/>\n            }/>\n            <Route exact path=\"/donate\" component={DonationPage}/>\n            <Route path=\"/event\" render={() => \n              <EventPage loggedIn={this.state.loggedIn}/>\n            }/>\n            <Route path=\"/service\" render={() => \n              <ServicePage loggedIn={this.state.loggedIn}/>\n            }/>\n        </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}