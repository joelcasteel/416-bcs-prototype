{"version":3,"sources":["pages/planner/planner.module.css","pages/login/login.module.css","pages/event/eventpage.module.css","pages/services/servicepage.module.css","pages/volunteer/volunteer.module.css","pages/main/eventfeed.module.css","pages/donate/donate.module.css","pages/payment/payment.module.css","pages/main/EventFeed.js","pages/main/ServiceFeed.js","pages/main/index.jsx","pages/NavBar.js","pages/login/index.jsx","pages/planner/index.jsx","pages/payment/index.jsx","pages/event/index.jsx","pages/donate/index.jsx","pages/volunteer/index.jsx","pages/services/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","EventFeed","state","eventsLoaded","events","error","eventLink","srcEvent","to","_uuid","title","eventList","map","event","index","start","Date","startDate","toString","end","endDate","description","toUTCString","a","fetch","method","headers","response","console","log","json","this","setState","className","styles","eventfeed","Component","ServiceFeed","servicesLoaded","services","serviceLink","srcService","serviceList","service","cost","costPeriod","MainPage","NavBar","loggedIn","props","isAdmin","role","onLogoutclick","onLogoutSubmit","loginText","username","onClick","LoginPage","password","onUsernameChange","target","value","onPasswordChange","onLoginButton","JSON","stringify","status","body","sessionStorage","setItem","token","header","parse","window","atob","split","payload","onLoginSubmit","onRegisterButton","onRegisterSubmit","redirectBack","nextPage","popNext","logindiv","loginfeed","id","colSpan","entry","type","onChange","buttonrow","login_button_cell","loginbutton","register_button_cell","registerbutton","Planner","require","name","participants","currentEvent","message","onNameChange","onStartTimeChange","onEndTimeChange","onParticipantsChange","onServicesChange","onDescriptionChange","onSavePressed","getItem","maxSlots","getEvents","onClearPressed","onEditClick","editEvent","slice","onDeleteClick","deleteEvent","eventTable","feed_div","event_feed","eventFeed","planner_div","planner_table","entry_prompt","pattern","control_cell","PaymentBar","onCardNumberUpdate","cardNum","onCardNameUpdate","cardName","onExpirMonthUpdate","expirMonth","onExpirYearUpdate","expirYear","onPaymentSubmit","sending","pmt","parseInt","getPayments","onPaymentSelect","payment","paymentLoaded","paymentOptions","i","pmtOptions","substring","push","label","payment_table","options","isSearchable","new_payment","min","max","EventPage","cNum","repeat","pmtChooser","paymentRequired","eventID","cardNumber","registered","registration","pmtReq","reg_table","count","paymentProvided","reg_div","currentEventDisplay","details_div","details_table","info","planner","pathname","location","eventLoaded","regs","reg","checkPmtReq","card","DonationPage","onDonorNameUpdate","donorName","onEmailUdate","email","onAmountUpdate","amount","onCardName","onCardNumUpdate","onSubmitDonation","donated","donate_div","donate_table","donate_name","testEvents","current","upcoming","ServicePage","onDetailUpdate","detail","serviceID","currentService","detailProvided","width","height","detail_entry","currentServiceDisplay","serviceLoaded","App","addNext","page","document","exact","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3de88862.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"planner_div\":\"planner_planner_div__2Buh9\",\"planner_table\":\"planner_planner_table__1lQrd\",\"entry_prompt\":\"planner_entry_prompt__BB0o3\",\"control_cell\":\"planner_control_cell__2yOgP\",\"description\":\"planner_description__2PY3s\",\"name\":\"planner_name__M6dy7\",\"start\":\"planner_start__mAOZa\",\"end\":\"planner_end__1GoCq\",\"participants\":\"planner_participants__d1TfE\",\"services\":\"planner_services__3Q9T_\",\"feed_div\":\"planner_feed_div__2nXc8\",\"event_feed\":\"planner_event_feed__1FjjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logindiv\":\"login_logindiv__2lyMY\",\"loginfeed\":\"login_loginfeed__2VZuP\",\"username\":\"login_username__11JhW\",\"password\":\"login_password__1o_F_\",\"entry\":\"login_entry__1UeXW\",\"buttonrow\":\"login_buttonrow__1zB-z\",\"login_button_cell\":\"login_login_button_cell__2ncw0\",\"register_button_cell\":\"login_register_button_cell__2TNMB\",\"loginbutton\":\"login_loginbutton__3ZEhI\",\"registerbutton\":\"login_registerbutton__34Rin\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details_div\":\"eventpage_details_div__heySG\",\"reg_div\":\"eventpage_reg_div__1mHO-\",\"payment_table\":\"eventpage_payment_table__1vu32\",\"new_payment\":\"eventpage_new_payment__3D9mD\",\"reg_table\":\"eventpage_reg_table__2atqK\",\"details_table\":\"eventpage_details_table__2McFG\",\"description\":\"eventpage_description__2L_7Q\",\"info\":\"eventpage_info__1Pmoc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details_div\":\"servicepage_details_div__cbYI_\",\"reg_div\":\"servicepage_reg_div__245wU\",\"payment_table\":\"servicepage_payment_table__3Pku-\",\"new_payment\":\"servicepage_new_payment__3kFrQ\",\"reg_table\":\"servicepage_reg_table__2VzaT\",\"details_table\":\"servicepage_details_table__3uOhK\",\"description\":\"servicepage_description__5La7x\",\"info\":\"servicepage_info__fVNoi\",\"detail_entry\":\"servicepage_detail_entry__3wWm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"volunteer_div\":\"volunteer_volunteer_div__K_j39\",\"volunteer_list\":\"volunteer_volunteer_list__2_9sw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedDiv\":\"eventfeed_feedDiv__Ichvb\",\"eventfeed\":\"eventfeed_eventfeed__2QGIS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"donate_div\":\"donate_donate_div__2me51\",\"donate_table\":\"donate_donate_table__30ETH\",\"donate_name\":\"donate_donate_name__3DuPT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"payment_table\":\"payment_payment_table__1P5-L\",\"new_payment\":\"payment_new_payment__3rXvB\"};","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport styles from './eventfeed.module.css'\r\n\r\nclass EventFeed extends Component {\r\n\r\n    state = {\r\n        eventsLoaded: false,\r\n        events: null,\r\n        error: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let response = await fetch(\r\n                '/api/event',\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n            });\r\n            console.log(response);\r\n\r\n            let events = await response.json();\r\n\r\n            console.log(events);\r\n\r\n            this.setState({\r\n                eventsLoaded: true,\r\n                events: events\r\n            });\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({\r\n                error:error\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    eventLink = (srcEvent) => {\r\n        return <td><Link to={'/event/' + srcEvent._uuid}>{srcEvent.title}</Link></td>\r\n    }\r\n\r\n    eventList = () => {\r\n        return this.state.events.map((event, index) => {\r\n            \r\n            let start = new Date(event.startDate.toString());\r\n            let end = new Date(event.endDate.toString());\r\n\r\n            return (\r\n                <tr key={index}>\r\n                    {this.eventLink(event)}\r\n                    <td>{event.description}</td>\r\n                    <td>{start.toUTCString()}</td>\r\n                    <td>{end.toUTCString()}</td>\r\n                </tr>\r\n            )\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.state.eventsLoaded && this.state.error === null) {\r\n            return (\r\n                <div className=\"feedDiv\">\r\n                    <table className={styles.eventfeed}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th key='eventName'>Event Name</th>\r\n                                <th key='eventdescript'>Event Type</th>\r\n                                <th key='startTime'>Start Time</th>\r\n                                <th key='endTime'>End Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.eventList()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        } else if(this.state.error) {\r\n            return (\r\n                <div>Error Loading Events</div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>Loading Events</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventFeed;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport styles from './eventfeed.module.css'\r\n\r\nclass ServiceFeed extends Component {\r\n\r\n    state = {\r\n        servicesLoaded: false,\r\n        services: null,\r\n        error: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let response = await fetch(\r\n                '/api/service',\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n            });\r\n            console.log(response);\r\n\r\n            let services = await response.json();\r\n\r\n            console.log(services);\r\n\r\n            this.setState({\r\n                servicesLoaded: true,\r\n                services: services\r\n            });\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({\r\n                error:error\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    serviceLink = (srcService) => {\r\n        return <td><Link to={'/service/' + srcService._uuid}>{srcService.title}</Link></td>\r\n    }\r\n\r\n    serviceList = () => {\r\n        return this.state.services.map((service, index) => {\r\n            \r\n            \r\n\r\n            return (\r\n                <tr key={index}>\r\n                    {this.serviceLink(service)}\r\n                    <td>{service.description}</td>\r\n                    <td>{service.cost}</td>\r\n                    <td>{service.costPeriod}</td>\r\n                </tr>\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.servicesLoaded && this.state.error === null) {\r\n            return (\r\n                <div className=\"feedDiv\">\r\n                    <table className={styles.eventfeed}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th key='serviceName'>Service Name</th>\r\n                                <th key='serviceDescript'>Service Type</th>\r\n                                <th key='serviceCost'>Service Cost </th>\r\n                                <th key='servicePeriod'>Cost Period</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.serviceList()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        } else if(this.state.error) {\r\n            return (\r\n                <div>Error Loading Services</div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>Loading services</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default ServiceFeed;","import React from 'react';\r\n\r\nimport EventFeed from './EventFeed';\r\nimport ServiceFeed from './ServiceFeed';\r\n\r\nconst MainPage = () => (\r\n    <div>\r\n        <br/><br/>\r\n        <h1>Best Community Service</h1>\r\n        <p>\r\n            Best Community Service is dedicated to making an impact locally through our many events\r\n            and volunteering opportunities.\r\n        </p>\r\n        <br/><br/>\r\n        <h2>Event Schedule</h2>\r\n        <EventFeed/>\r\n        <br/>\r\n        <br/>\r\n        <h2>Services Provided</h2>\r\n        <ServiceFeed/>\r\n    </div>\r\n)\r\n\r\nexport default MainPage;","import React, {Component, Fragment} from 'react';\r\nimport { Redirect} from 'react-router';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport'./navbar.css';\r\n\r\nclass NavBar extends Component {\r\n\r\n    state = {\r\n        loggedIn: this.props.loggedIn,\r\n        isAdmin: this.props.role === \"admin\"\r\n    }\r\n\r\n    onLogoutclick = event => {\r\n        this.props.onLogoutSubmit();\r\n    };\r\n\r\n\r\n    loginText = () => {\r\n        if(!this.props.loggedIn) {\r\n            return <Link to=\"/login\"><b>Login/Register</b></Link>;\r\n            \r\n        }\r\n\r\n        return <Fragment>Welcome, {this.props.username}. <Link onClick={this.onLogoutclick} to='/'><b>Logout</b></Link></Fragment>;\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table className='navbar'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className='logo' key='logo'><b>Best Community Service</b></td>\r\n                            <td key='pad0'></td>\r\n                            <td key='home'><Link to=\"/\"><b>Home</b></Link></td>\r\n                            {this.props.role === \"admin\" &&\r\n                                <td key='planner'><Link to=\"/planner\"><b>Event Planner</b></Link></td>\r\n                                \r\n                            }\r\n                            <td key='donate'><Link to=\"/donate\"><b>Donate</b></Link></td>\r\n                            <td key='pad1'></td>\r\n                            <td className='login' key='login'>{this.loginText()}</td>\r\n                            \r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, {Component} from 'react';\r\nimport {Redirect, useHistory} from 'react-router-dom';\r\n\r\nimport styles from './login.module.css';\r\n\r\nclass LoginPage extends Component {\r\n\r\n    \r\n\r\n    state = {\r\n        username: null,\r\n        password: null,\r\n        loggedIn: false,\r\n        error: null\r\n    }\r\n\r\n    onUsernameChange = event => {\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n\r\n    onPasswordChange = event => {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    onLoginButton = async (event) => {\r\n        if(this.state.username && this.state.password) {\r\n            try {\r\n                let response = await fetch('/login', {\r\n                    'method': \"POST\",\r\n                    'headers': {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    'body': JSON.stringify({\r\n                        'username': this.state.username,\r\n                        'password': this.state.password\r\n                    })\r\n                });\r\n\r\n                if(response.status === 201) {\r\n                    let body = await response.json();\r\n                    sessionStorage.setItem(\"token\", body.token);\r\n                    let token = {};\r\n\r\n                    token.header = JSON.parse(window.atob(body.token.split('.')[0]));\r\n                    token.payload = JSON.parse(window.atob(body.token.split('.')[1]));\r\n\r\n                    sessionStorage.setItem(\"username\", token.payload.username);\r\n                    sessionStorage.setItem(\"role\", token.payload.role);\r\n\r\n                    this.props.onLoginSubmit(token.payload.username, token.payload.role);\r\n                }\r\n\r\n            } catch(error) {\r\n                console.log(error);\r\n                this.setState({\r\n                    error: error\r\n                });\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    onRegisterButton = async (event) => {\r\n        if(this.state.username && this.state.password) {\r\n            try {\r\n                let response = await fetch('/register', {\r\n                    'method': \"POST\",\r\n                    'headers': {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    'body': JSON.stringify({\r\n                        'username': this.state.username,\r\n                        'password': this.state.password\r\n                    })\r\n                });\r\n\r\n                if(response.status === 201) {\r\n                    let body = await response.json();\r\n                    sessionStorage.setItem(\"token\", body.token);\r\n\r\n                    let token = {}\r\n\r\n                    token.header = JSON.parse(window.atob(body.token.split('.')[0]));\r\n                    token.payload = JSON.parse(window.atob(body.token.split('.')[1]));\r\n\r\n                    sessionStorage.setItem(\"username\", token.payload.username);\r\n                    sessionStorage.setItem(\"role\", token.payload.role);\r\n\r\n                    this.props.onRegisterSubmit(token.payload.username, token.payload.role);\r\n                }\r\n\r\n            } catch(error) {\r\n                console.log(error);\r\n                this.setState({\r\n                    error: error\r\n                });\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    redirectBack = () => {\r\n        let nextPage = this.props.popNext();\r\n            return (\r\n                <Redirect to={nextPage}/>\r\n            )\r\n    }\r\n\r\n\r\n    render() {\r\n        if(!this.props.loggedIn) {\r\n            return (\r\n                <div>\r\n                    <h1>Login</h1>\r\n                    <div className={styles.logindiv}>\r\n                    <table className={styles.loginfeed}>\r\n                        <tbody>\r\n                            <tr key='username'>\r\n                                <td id={styles.username} colSpan='2'>\r\n                                    <b>Username</b><br/>\r\n                                    <input className={styles.entry} type='text' onChange={this.onUsernameChange}></input>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td id={styles.password} colSpan='2'>\r\n                                    <b>Password</b><br/>\r\n                                    <input className={styles.entry} type='password' onChange={this.onPasswordChange}></input>\r\n                                </td>\r\n                            </tr>\r\n                            <tr id={styles.buttonrow}>\r\n                                <td id={styles.login_button_cell}>\r\n                                    <button id={styles.loginbutton} onClick={this.onLoginButton}><b>Login</b></button>\r\n                                </td>\r\n                                <td id={styles.register_button_cell}>\r\n                                    <button id={styles.registerbutton} onClick={this.onRegisterButton}><b>Register</b></button>\r\n                                </td>\r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {this.redirectBack()}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default LoginPage;","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport styles from './planner.module.css';\r\n\r\nconst testEvents = require('../../testEvents.json');\r\n\r\nclass Planner extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        start: '',\r\n        end: '',\r\n        participants: 0,\r\n        services: '',\r\n        description: '',\r\n\r\n        eventsLoaded: false,\r\n        events: null,\r\n        error: null,\r\n\r\n        currentEvent: null,\r\n\r\n        message: \"\"\r\n    }\r\n\r\n    async getEvents() {\r\n        this.setState({\r\n            events: null,\r\n            eventsLoaded: false,\r\n            error: null\r\n        });\r\n\r\n        try {\r\n            let token = window.sessionStorage.getItem(\"token\");\r\n            let response = await fetch('/api/event', \r\n            {\r\n                'method': 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization':'Bearer ' + token\r\n                }\r\n            });\r\n\r\n            if(response.status === 200) {\r\n                let events = await response.json();\r\n                console.log(events);\r\n\r\n                this.setState({\r\n                    events: events,\r\n                    eventsLoaded: true\r\n                });\r\n\r\n            }\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({\r\n                error: error\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getEvents();\r\n\r\n\r\n    }\r\n\r\n    onNameChange = event => {\r\n        this.setState({\r\n            name: event.target.value\r\n        });\r\n    }\r\n\r\n    onStartTimeChange = event => {\r\n        this.setState({\r\n            start: event.target.value\r\n        });\r\n    }\r\n    \r\n    onEndTimeChange = event => {\r\n        this.setState({\r\n            end: event.target.value\r\n        });\r\n    }\r\n\r\n    onParticipantsChange = event => {\r\n        this.setState({\r\n            participants: event.target.value\r\n        });\r\n    }\r\n\r\n    onServicesChange = event => {\r\n        this.setState({\r\n            services: event.target.value\r\n        });\r\n    }\r\n\r\n    onDescriptionChange = event => {\r\n        this.setState({\r\n            description: event.target.value\r\n        });\r\n    }\r\n\r\n    onSavePressed = async (event) => {\r\n\r\n        try {\r\n            let token = window.sessionStorage.getItem(\"token\");\r\n            let response = await fetch('/api/event', \r\n            {\r\n                'method': 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization':'Bearer ' + token\r\n                },\r\n                body: JSON.stringify({\r\n                    title: this.state.name,\r\n                    startDate: this.state.start,\r\n                    endDate: this.state.end,\r\n                    maxSlots: this.state.participants,\r\n                    cost: this.state.services,\r\n                    description: this.state.description\r\n                })\r\n            });\r\n            console.log(response);\r\n            if(response.status === 201) {\r\n                this.getEvents();\r\n\r\n            }\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({\r\n                error: error,\r\n                message: \"Error saving event!\"\r\n            });\r\n\r\n        }\r\n\r\n\r\n\r\n        this.setState({\r\n            name: '',\r\n            start: '',\r\n            end: '',\r\n            participants: 0,\r\n            services: '',\r\n            description: ''\r\n        });\r\n    }\r\n\r\n    onClearPressed = event => {\r\n        this.setState({\r\n            name: '',\r\n            startDate: '',\r\n            endDate: '',\r\n            participants: 0,\r\n            services: '',\r\n            description: ''\r\n        });\r\n    }\r\n\r\n    onEditClick = function(editEvent) {\r\n\r\n\r\n        this.setState({\r\n            name: editEvent.title,\r\n            startDate: editEvent.startDate.slice(0,-1),\r\n            endDate: editEvent.endDate.slice(0,-1),\r\n            participants: editEvent.maxSlots,\r\n            services: editEvent.cost,\r\n            description: editEvent.description\r\n        });\r\n    }\r\n\r\n    onDeleteClick = async function(deleteEvent) {\r\n        console.log(deleteEvent._uuid);\r\n        try {\r\n\r\n            let token = window.sessionStorage.getItem(\"token\");\r\n\r\n            let response = await fetch('/api/event/' + deleteEvent._uuid, {\r\n                'method': 'DELETE',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization':'Bearer ' + token\r\n                }\r\n            });\r\n            console.log(response)\r\n            if(response.status === 204) {\r\n                this.getEvents();\r\n                this.setState({\r\n                    message: \"Event successfully deleted\"\r\n                });\r\n            }\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({\r\n                message: \"Error deleting event!\"\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    eventTable = () => {\r\n        return (\r\n            <div className={styles.feed_div}>\r\n                <table className={styles.event_feed}>\r\n                <thead>\r\n                        <tr>\r\n                            <th key='eventName'>Event Name</th>\r\n                            <th key='start'>Start Time</th>\r\n                            <th key='end'>End Time</th>\r\n                            <th key='participants'>Participants</th>\r\n                            <th key='services'>Cost</th>\r\n                            <th key='description'>Description</th>\r\n                            <th key='delete-blank'></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.eventFeed()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    eventFeed = () => {\r\n        return this.state.events.map((event, index) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <td>{event.title}</td>\r\n                    <td>{new Date(event.startDate.toString()).toUTCString()}</td>\r\n                    <td>{new Date(event.endDate.toString()).toUTCString()}</td>\r\n                    <td>{event.maxSlots}</td>\r\n                    <td>{event.cost}</td>\r\n                    <td>{event.description}</td>\r\n                    <td key='delete'><button onClick={() => this.onDeleteClick(event)}>Delete</button></td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.eventsLoaded && this.state.error === null) {\r\n            return (\r\n                <div>\r\n                    <div className={styles.planner_div}>\r\n                        <h3>Create Event</h3>\r\n                        <h4>{this.state.message}</h4>\r\n                        <table className={styles.planner_table}>\r\n                            <tbody>\r\n                                <tr key=\"event-name\">\r\n                                    <td className={styles.entry_prompt}>Event Name</td>\r\n                                    <td colSpan='3'><input id={styles.name} type='text' value={this.state.name} onChange={this.onNameChange}></input></td>\r\n                                </tr>\r\n                                <tr key=\"event-time\">\r\n                                    <td className={styles.entry_prompt}>Start Time</td>\r\n                                    <td><input id={styles.start} type='datetime-local' value={this.state.startDate} onChange={this.onStartTimeChange}></input></td>\r\n                                    <td className={styles.entry_prompt}>End Time</td>\r\n                                    <td><input id={styles.end} type='datetime-local' value={this.state.endDate} onChange={this.onEndTimeChange}></input></td>\r\n                                </tr>\r\n                                <tr key=\"event-details\">\r\n                                    <td className={styles.entry_prompt}>Participants</td>\r\n                                    <td><input id={styles.participants} type='text' pattern='^[0-9]*$' value={this.state.participants} onChange={this.onParticipantsChange}></input></td>\r\n                                    <td className={styles.entry_prompt}>Event Cost</td>\r\n                                    <td>$<input id={styles.services} type='text' value={this.state.services} onChange={this.onServicesChange}></input></td>\r\n                                </tr>\r\n                                <tr key=\"event-description\">\r\n                                    <td className={styles.entry_prompt}>Description</td>\r\n                                    <td colSpan='3'><textarea id={styles.description} value={this.state.description} onChange={this.onDescriptionChange}></textarea></td>\r\n                                    \r\n                                </tr>\r\n                            </tbody>\r\n                            <tfoot>\r\n                                <tr>\r\n                                    <td className={styles.control_cell} colSpan='2'>\r\n                                        <button onClick={this.onSavePressed}>\r\n                                            Save Event\r\n                                        </button>\r\n                                    </td>\r\n                                    <td className={styles.control_cell} colSpan='2'>\r\n                                    <button onClick={this.onClearPressed}>\r\n                                            Clear Event\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tfoot>\r\n                        </table>\r\n                    </div>\r\n                    <div>\r\n                        <h3>Planned Events</h3>\r\n                        <div>\r\n                            {this.eventTable()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if(this.state.error) {\r\n            return (\r\n                <div>\r\n                    Error loading Events\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    Loading events\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Planner;","import React, {Component, Fragment} from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport Select from 'react-select';\r\n\r\nimport styles from './payment.module.css';\r\n\r\n\r\nclass PaymentBar extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            payment: null,\r\n            paymentLoaded: false,\r\n            paymentOptions: null,\r\n\r\n            cardNum: \"\",\r\n            cardName: \"\",\r\n            expirMonth: 1,\r\n            expirYear: 2021,\r\n            sending: false,\r\n            error: null,\r\n\r\n            message: \"\"\r\n        }\r\n    }\r\n\r\n    async getPayments() {\r\n        try {\r\n            let token = window.sessionStorage.getItem('token');\r\n            let response = await fetch(\r\n                '/api/payment/', \r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization':'Bearer ' + token\r\n                    }\r\n            });\r\n            console.log(response);\r\n            let payment = await response.json();\r\n            console.log(payment);\r\n\r\n            let pmtOptions = [];\r\n\r\n            for(let i in payment) {\r\n                let substring = payment[i].cardNum.toString();\r\n                substring = substring.slice(0,4) + \" **** **** ****\";\r\n                pmtOptions.push(\r\n                    {\r\n                        value: payment[i],\r\n                        label: substring\r\n                    }\r\n                )\r\n\r\n            }\r\n\r\n            this.setState({\r\n                paymentLoaded: true,\r\n                payment: payment,\r\n                paymentOptions: pmtOptions\r\n            });\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({error:error});\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getPayments();\r\n    }\r\n\r\n\r\n    onCardNumberUpdate = event => {\r\n        this.setState({\r\n            cardNum: event.target.value\r\n        });\r\n    }\r\n\r\n    onCardNameUpdate = event => {\r\n        this.setState({\r\n            cardName: event.target.value\r\n        });\r\n    }\r\n\r\n    onExpirMonthUpdate = event => {\r\n        this.setState({\r\n            expirMonth: event.target.value\r\n        });\r\n    }\r\n\r\n    onExpirYearUpdate = event => {\r\n        this.setState({\r\n            expirYear: event.target.value\r\n        });\r\n    }\r\n\r\n    onPaymentSubmit = async(event) => {\r\n        this.setState({sending: true});\r\n        let pmt = {\r\n            'cardNum': this.state.cardNum,\r\n            'name': this.state.cardName,\r\n            'expirMonth': parseInt(this.state.expirMonth),\r\n            'expirYear': parseInt(this.state.expirYear)\r\n        };\r\n\r\n        try {\r\n            let token = window.sessionStorage.getItem('token');\r\n            let response = await fetch('/api/payment/',\r\n                {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization':'Bearer ' + token\r\n                },\r\n                body: JSON.stringify(pmt)\r\n            });\r\n\r\n            if(response.status === 201) {\r\n                this.getPayments();\r\n                this.setState({\r\n                    message: \"Payment saved successfully\"\r\n                });\r\n\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            this.setState({\r\n                error: error,\r\n                message: \"Error saving payment\"\r\n            });\r\n        }\r\n    }\r\n\r\n    onPaymentSelect = pmt => {\r\n        this.props.onPaymentSelect(pmt);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table className={styles.payment_table}> \r\n                <tbody>\r\n                    <tr>\r\n                        <td colSpan=\"1\">\r\n                            <h3>Select Payment</h3><br/>\r\n                            <Select \r\n                                options={this.state.paymentOptions}\r\n                                isSearchable={true}\r\n                                onChange={this.onPaymentSelect}\r\n                            />\r\n                        </td>\r\n                        <td colSpan=\"1\" className={styles.new_payment}>\r\n                            <h3>Add New Payment Method</h3>\r\n\r\n                            <p>{this.state.message}</p>\r\n\r\n                            <b>Card Number</b><br/>\r\n                            <input type=\"text\" onChange={this.onCardNumberUpdate} value={this.state.cardNum}></input><br/><br/>\r\n\r\n                            <b>Cardholder Name</b><br/>\r\n                            <input type=\"text\" onChange={this.onCardNameUpdate} value={this.state.cardName}></input><br/><br/>\r\n\r\n                            <b>Expiration Month</b><br/>\r\n                            <input type=\"number\" min=\"1\" max=\"12\" onChange={this.onExpirMonthUpdate} value={this.state.expirMonth}></input><br/><br/>\r\n\r\n                            <b>Expiration Year</b><br/>\r\n                            <input type=\"number\" min=\"2021\" max=\"2050\" onChange={this.onExpirYearUpdate} value={this.state.expirYear}></input><br/><br/>\r\n                            <button onClick={this.onPaymentSubmit}>Save Payment</button>\r\n                            \r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n    );\r\n    }\r\n}\r\n\r\nexport default PaymentBar;","import React, {Component, Fragment} from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport Select from 'react-select';\r\n\r\nimport PaymentBar from '../payment';\r\n\r\nimport styles from './eventpage.module.css';\r\n\r\nlet testEvents = require('../../testEvents.json').events;\r\n\r\nclass EventPage extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        let pathname = window.location.pathname.slice(7);\r\n        console.log(pathname);\r\n\r\n        this.state = {\r\n            pathname: pathname,\r\n\r\n            currentEvent: null,\r\n            eventLoaded: false,\r\n\r\n            paymentRequired: false,\r\n            pmt: \"\",\r\n            \r\n\r\n            payment: null,\r\n            paymentProvided: \"\",\r\n            paymentLoaded: false,\r\n            paymentOptions: null,\r\n\r\n            cardNum: \"\",\r\n            cardName: \"\",\r\n            expirMonth: 1,\r\n            expirYear: 2021,\r\n\r\n            error: null,\r\n            message: \"\",\r\n            registered: false,\r\n        }\r\n    }\r\n\r\n    checkRegistered() {\r\n        let username = sessionStorage.getItem(\"username\");\r\n\r\n            for(let i in this.state.currentEvent.regs) {\r\n                let reg = this.state.currentEvent.regs[i];\r\n                console.log(reg);\r\n                if(reg.username === username) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let response = await fetch(\r\n                '/api/event/' + this.state.pathname,\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n            });\r\n            console.log(response);\r\n\r\n            let event = await response.json();\r\n\r\n            console.log(event);\r\n\r\n\r\n            this.setState({\r\n                eventLoaded: true,\r\n                currentEvent: event\r\n            });\r\n\r\n            this.checkPmtReq();\r\n\r\n        if(this.props.loggedIn) {\r\n            console.log(\"HELLO\");\r\n            let username = sessionStorage.getItem(\"username\");\r\n            for(let i in event.regs) {\r\n                let reg = event.regs[i];\r\n                console.log(reg);\r\n                if(reg.username === username) {\r\n                    let card = \"\";\r\n                    if(reg.cardNum !== null) {\r\n                        card = reg.cardNum.slice(0,4) + \" **** **** ****\";\r\n                    }\r\n                    this.setState({\r\n                        registered: true,\r\n                        paymentProvided: card\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({\r\n                error:error\r\n            });\r\n        }\r\n    }\r\n\r\n    onPaymentSelect = (pmt) =>  {\r\n        let cNum = pmt.value.cardNum.repeat(1);\r\n        this.setState({\r\n            payment: cNum\r\n        });\r\n    }\r\n\r\n\r\n    checkPmtReq() {\r\n        if(this.state.currentEvent.cost > 0) {\r\n            this.setState({\r\n                paymentRequired: true\r\n            });\r\n        }\r\n    }\r\n\r\n    pmtChooser = () => {\r\n        if(this.state.paymentRequired) {\r\n            return <PaymentBar onPaymentSelect={this.onPaymentSelect}/>\r\n        }\r\n        return \"\"\r\n    }\r\n\r\n    onRegisterSubmit = async (event) => {\r\n        try {\r\n            if(this.state.payment !== null || !this.state.paymentRequired){\r\n                let pmt = \"\";\r\n                if(this.state.payment !== null ) {\r\n                    pmt = this.state.payment;\r\n                }\r\n                let token = window.sessionStorage.getItem('token');\r\n                let response = await fetch('/api/reg', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization':'Bearer ' + token\r\n                    },\r\n                    body: JSON.stringify({\r\n                        eventID: this.state.currentEvent._uuid,\r\n                        cardNumber: pmt\r\n                    })\r\n                });\r\n                if(response.status === 201) {\r\n                    this.setState({\r\n                        message: \"Registration added.\",\r\n                        registered: true\r\n                    })\r\n                }\r\n            } else if(this.state.paymentRequired) {\r\n                this.setState({\r\n                    message: \"Payment Required.\",\r\n                })\r\n            }\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({\r\n                message: \"Error saving registration\"\r\n            });\r\n        }\r\n    }\r\n\r\n    registration = () => {\r\n        let pmtReq = \"No\";\r\n        if(this.state.paymentRequired) {\r\n            pmtReq = \"Yes\";\r\n        }\r\n\r\n\r\n        if(this.props.loggedIn) {\r\n            let username = sessionStorage.getItem(\"username\");\r\n\r\n\r\n            if(this.state.registered) {\r\n                return (\r\n                    <div>\r\n                        <h3>Already Registered for Event</h3>\r\n                        <table className={styles.reg_table}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <b>Username</b><br/>\r\n                                        {username}\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Slots Taken</b><br/>\r\n                                        {this.state.currentEvent.count}/{this.state.currentEvent.maxSlots}\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Payment Provided</b><br/>\r\n                                        {this.state.paymentProvided}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )\r\n            } else {\r\n\r\n                return (\r\n                    <div className={styles.reg_div}>\r\n                        <h2>Register for Event</h2>\r\n                        <table className={styles.reg_table}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <b>Username</b><br/>\r\n                                        {username}\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Slots Taken</b><br/>\r\n                                        {this.state.currentEvent.count}/{this.state.currentEvent.maxSlots}\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Payment Required</b><br/>\r\n                                        {pmtReq}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {this.pmtChooser()}\r\n                        <br/>\r\n                        <p>{this.state.message}</p>\r\n                        <br/>\r\n                        <button onClick={this.onRegisterSubmit}>Register</button><br/><br/>\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <h3>Login to Register</h3>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n    currentEventDisplay = () => {\r\n        return (\r\n            <div className={styles.details_div}>\r\n                <h1>{this.state.currentEvent.title}</h1>\r\n                <table className={styles.details_table}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th key=\"start\">Start Time</th>\r\n                            <th key=\"end\">End Time</th>\r\n                            <th key=\"attendees\">Max Attendees</th>\r\n                            <th key=\"planner\">Planner</th>\r\n                            <th key=\"cost\">Cost</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className={styles.info}>{new Date(this.state.currentEvent.startDate.toString()).toUTCString()}</td>\r\n                            <td className={styles.info}>{new Date(this.state.currentEvent.endDate.toString()).toUTCString()}</td>\r\n                            <td className={styles.info}>{this.state.currentEvent.maxSlots}</td>\r\n                            <td className={styles.info}>{this.state.currentEvent.planner}</td>\r\n                            <td className={styles.info}>${this.state.currentEvent.cost}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td id={styles.description} colSpan='5'>\r\n                                <b>Description:</b><br/>\r\n                                <p>{this.state.currentEvent.description}</p>\r\n                            </td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render () {\r\n        if(this.state.eventLoaded && this.state.error === null) {\r\n            return (\r\n                <div>\r\n                    {this.currentEventDisplay()}\r\n                    <br/><br/>\r\n                    {this.registration()}\r\n                </div>\r\n            )\r\n        } else if(this.state.error) {\r\n            return (\r\n                <div>\r\n                    Error fetching event\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>Loading event details</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventPage;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport styles from './donate.module.css';\r\n\r\nclass DonationPage extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            donorName: \"\",\r\n            email: \"\",\r\n            amount: 0.00,\r\n            cardNum: \"\",\r\n            cardName: \"\",\r\n            expirMonth: 1,\r\n            expirYear: 2021,\r\n            \r\n            donated: false\r\n        }\r\n    }\r\n\r\n    onDonorNameUpdate = event => {\r\n        this.setState({\r\n            donorName: event.target.value\r\n        });\r\n    }\r\n\r\n    onEmailUdate = event => {\r\n        this.setState({\r\n            email: event.target.value\r\n        });\r\n    }\r\n\r\n    onAmountUpdate = event => {\r\n        this.setState({\r\n            amount: event.target.value\r\n        });\r\n    }\r\n\r\n    onCardName = event => {\r\n        this.setState({\r\n            cardName: event.target.value\r\n        });\r\n    }\r\n\r\n    onCardNumUpdate = event => {\r\n        this.setState({\r\n            cardNum: event.target.value\r\n        });\r\n    }\r\n\r\n    onExpirMonthUpdate = event => {\r\n        this.setState({\r\n            expirMonth: event.target.value\r\n        });\r\n    }\r\n\r\n    onExpirYearUpdate = event => {\r\n        this.setState({\r\n            expirYear: event.target.value\r\n        });\r\n    }\r\n\r\n    onSubmitDonation = event => {\r\n        \r\n        this.setState({\r\n            donated: true\r\n        })\r\n    }\r\n\r\n\r\n    render () {\r\n        if(!this.state.donated) {\r\n            return (\r\n                <div className={styles.donate_div}>\r\n                    <h1>Donations</h1>\r\n                    <p>\r\n                        Here at Best Community Service, we are dedicated to making the most of what we're given.<br/>\r\n                        To make a donation please download, fill out, and upload a donation form.<br/>\r\n                        We'll contact you to complete the process.\r\n                    </p>\r\n                    <table className={styles.donate_table}>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td colSpan=\"2\">\r\n                                    Donor Name <br/>\r\n                                    <input type=\"text\" className={styles.donate_name} value={this.state.donorName} onChange={this.onDonorNameUpdate}></input>\r\n                                </td>\r\n                                <td>\r\n                                    Donor Email <br/>\r\n                                    <input type=\"text\" value={this.state.email} onChange={this.onEmailUdate}/>\r\n                                </td>\r\n                                <td>\r\n                                    Donation Amount <br/>\r\n                                    $<input type=\"text\" value={this.state.amount} onChange={this.onAmountUpdate}/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    Card Number <br/>\r\n                                    <input type=\"text\" value={this.state.cardNum} onChange={this.onCardNumUpdate}></input>\r\n                                </td>\r\n                                <td>\r\n                                    Cardholder Name <br/>\r\n                                    <input type=\"text\" value={this.state.cardName} onChange={this.onCardName}></input>\r\n                                </td>\r\n                                <td>\r\n                                    Expiration Month\r\n                                    <input type=\"text\" value={this.state.expirMonth} onChange={this.onExpirMonthUpdate}></input>\r\n                                </td>\r\n                                <td>\r\n                                    Expiration Year\r\n                                    <input type=\"text\" value={this.state.expirYear} onChange={this.onExpirYearUpdate}></input>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <button onClick={this.onSubmitDonation}>Submit Donation</button>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <h2>Donation successful! Thank you for your contribution!</h2>\r\n                    <Link to=\"/\">Return to Homepage</Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default DonationPage;","import React, {Component} from 'react';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport styles from './volunteer.module.css';\r\nlet testEvents = require('../../testEvents.json');\r\n\r\n\r\nlet current = [\r\n    [testEvents['public'][0], \"Approved\"],\r\n    [testEvents['public'][1], \"Pending\"]\r\n];\r\n\r\nlet upcoming = [\r\n    testEvents['public'][2],\r\n    testEvents['public'][3]\r\n];\r\n\r\nclass VolunteerPage extends Component {\r\n\r\n\r\n    currentList = () => {\r\n        return current.map((oppName, i) => {\r\n            console.log(oppName)\r\n            let opp = testEvents.events[oppName[0]];\r\n            return (\r\n                <tr key={i}>\r\n                    <td>{opp.name}</td>\r\n                    <td colSpan='2'>{opp.volunteerNeeds}</td>\r\n                    <td>{oppName[1]}</td>\r\n                    <td>{opp.startTime}</td>\r\n                    <td>{opp.endTime}</td>\r\n                    <td>{opp.totalSlots}</td>\r\n                    <td>{opp.remainingSlots}</td>\r\n                    <td><button>Remove Application</button></td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    upcomingList = () => {\r\n        return upcoming.map((oppName, i) => {\r\n            let opp = testEvents.events[oppName];\r\n            return(\r\n                <tr key={i}>\r\n                    <td>{opp.name}</td>\r\n                    <td colSpan='2'>{opp.volunteerNeeds}</td>\r\n                    <td>{opp.startTime}</td>\r\n                    <td>{opp.endTime}</td>\r\n                    <td>{opp.totalSlots}</td>\r\n                    <td>{opp.remainingSlots}</td>\r\n                    <td><button>Submit Application</button></td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    redirectLogin = () => {\r\n        this.props.addNext('/volunteer');\r\n        return <Redirect to='/login'/>\r\n    }\r\n\r\n    render() {\r\n        if(this.props.loggedIn) {\r\n            return (\r\n                <div>\r\n                    <div className={styles.volunteer_div}>\r\n                        <h3>Current Volunteering Applications</h3>\r\n                        <table className={styles.volunteer_list}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th key='eventName'>Name</th>\r\n                                    <th key='eventNeeds' colSpan='2'>Volunteer Needs Description</th>\r\n                                    <th key='approval'>Approval Status</th>\r\n                                    <th key='startTime'>Start Time</th>\r\n                                    <th key='endTime'>End Time</th>\r\n                                    <th key='totalSlots'>Total Slots</th>\r\n                                    <th key='remainingSlots'>Remaining Slots</th>\r\n                                    <th key='button'></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.currentList()}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <br/>\r\n                    <br/>\r\n                    <div className={styles.volunteer_div}>\r\n                        <h3>Upcoming Opportunities</h3>\r\n                        <table className={styles.volunteer_list}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th key='eventName'>Name</th>\r\n                                    <th key='eventNeeds' colSpan='2'>Volunteer Needs Description</th>\r\n                                    <th key='startTime'>Start Time</th>\r\n                                    <th key='endTime'>End Time</th>\r\n                                    <th key='totalSlots'>Total Slots</th>\r\n                                    <th key='remainingSlots'>Remaining Slots</th>\r\n                                    <th key='button'></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.upcomingList()}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            )\r\n            } else {\r\n            return(\r\n                <div>\r\n                    {this.redirectLogin()}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default VolunteerPage;","import React, {Component, Fragment} from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport Select from 'react-select';\r\n\r\nimport PaymentBar from '../payment';\r\n\r\nimport styles from './servicepage.module.css';\r\n\r\nlet testEvents = require('../../testEvents.json').events;\r\n\r\nclass ServicePage extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        let pathname = window.location.pathname.slice(9);\r\n        console.log(pathname);\r\n\r\n        this.state = {\r\n            pathname: pathname,\r\n\r\n            currentService: null,\r\n            serviceLoaded: false,\r\n\r\n            paymentRequired: false,\r\n            pmt: \"\",\r\n\r\n            detail: \"\",\r\n            detailProvided: \"\",\r\n            \r\n\r\n            payment: null,\r\n            paymentProvided: \"\",\r\n\r\n\r\n            error: null,\r\n            message: \"\",\r\n            registered: false,\r\n        }\r\n    }\r\n\r\n    checkRegistered() {\r\n        let username = sessionStorage.getItem(\"username\");\r\n\r\n            for(let i in this.state.currentService.regs) {\r\n                let reg = this.state.currentService.regs[i];\r\n                console.log(reg);\r\n                if(reg.username === username) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let response = await fetch(\r\n                '/api/service/' + this.state.pathname,\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n            });\r\n            console.log(response);\r\n\r\n            let service = await response.json();\r\n\r\n            console.log(service);\r\n\r\n\r\n            this.setState({\r\n                serviceLoaded: true,\r\n                currentService: service\r\n            });\r\n\r\n            this.checkPmtReq();\r\n\r\n        if(this.props.loggedIn) {\r\n            console.log(\"HELLO\");\r\n            let username = sessionStorage.getItem(\"username\");\r\n            for(let i in service.regs) {\r\n                let reg = service.regs[i];\r\n                console.log(reg);\r\n                if(reg.username === username) {\r\n                    let card = \"\";\r\n                    if(reg.cardNum !== null) {\r\n                        card = reg.cardNum.slice(0,4) + \" **** **** ****\";\r\n                    }\r\n                    this.setState({\r\n                        registered: true,\r\n                        paymentProvided: card\r\n                    });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({\r\n                error:error\r\n            });\r\n        }\r\n    }\r\n\r\n    onPaymentSelect = (pmt) =>  {\r\n        let cNum = pmt.value.cardNum.repeat(1);\r\n        this.setState({\r\n            payment: cNum\r\n        });\r\n    }\r\n\r\n\r\n    checkPmtReq() {\r\n        if(this.state.currentService.cost > 0) {\r\n            this.setState({\r\n                paymentRequired: true\r\n            });\r\n        }\r\n    }\r\n\r\n    pmtChooser = () => {\r\n        if(this.state.paymentRequired) {\r\n            return <PaymentBar onPaymentSelect={this.onPaymentSelect}/>\r\n        }\r\n        return \"\"\r\n    }\r\n\r\n    onDetailUpdate = event => {\r\n        this.setState({\r\n            detail: event.target.value\r\n        });\r\n    }\r\n\r\n    onRegisterSubmit = async (event) => {\r\n        try {\r\n            console.log(this.state.payment);\r\n            if(this.state.payment !== null || !this.state.paymentRequired){\r\n                let token = window.sessionStorage.getItem('token');\r\n                let response = await fetch('/api/sub', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization':'Bearer ' + token\r\n                    },\r\n                    body: JSON.stringify({\r\n                        serviceID: this.state.currentService._uuid,\r\n                        cardNumber: this.state.payment,\r\n                        detail: this.state.detail,\r\n                    })\r\n                });\r\n                console.log(response);\r\n                if(response.status === 201) {\r\n                    this.setState({\r\n                        message: \"Registration added.\",\r\n                        registered: true,\r\n                        detailProvided: this.state.detail\r\n                    })\r\n                }\r\n            } else if(this.state.paymentRequired) {\r\n                this.setState({\r\n                    message: \"Payment Required.\",\r\n                })\r\n            }\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({\r\n                message: \"Error saving registration\"\r\n            });\r\n        }\r\n    }\r\n\r\n    registration = () => {\r\n        let pmtReq = \"No\";\r\n        if(this.state.paymentRequired) {\r\n            pmtReq = \"Yes\";\r\n        }\r\n\r\n\r\n        if(this.props.loggedIn) {\r\n            let username = sessionStorage.getItem(\"username\");\r\n\r\n\r\n            if(this.state.registered) {\r\n                return (\r\n                    <div>\r\n                        <h3>Registered for Service</h3>\r\n                        <table className={styles.reg_table}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <b>Username</b><br/>\r\n                                        {username}\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Note</b><br/>\r\n                                        {this.state.detailProvided}\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Payment Provided</b><br/>\r\n                                        {this.state.paymentProvided}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )\r\n            } else {\r\n\r\n                return (\r\n                    <div className={styles.reg_div}>\r\n                        <h2>Register for Service</h2>\r\n                        <table className={styles.reg_table}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <b>Username</b><br/>\r\n                                        {username}\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Note</b><br/>\r\n                                        <textarea width=\"64\" height=\"3\" className={styles.detail_entry} value={this.state.detail} onChange={this.onDetailUpdate}/>\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Payment Required</b><br/>\r\n                                        {pmtReq}\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        {this.pmtChooser()}\r\n                        <br/>\r\n                        <p>{this.state.message}</p>\r\n                        <br/>\r\n                        <button onClick={this.onRegisterSubmit}>Register</button><br/><br/>\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <h3>Login to Register</h3>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n    currentServiceDisplay = () => {\r\n        return (\r\n            <div className={styles.details_div}>\r\n                <h1>{this.state.currentService.title}</h1>\r\n                <table className={styles.details_table}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th key=\"type\">Service Type</th>\r\n                            <th key=\"cost\">Cost</th>\r\n                            <th key=\"costPeriod\">Cost Period</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr> \r\n                            <td className={styles.info}>{this.state.currentService.type}</td>\r\n                            <td className={styles.info}>${this.state.currentService.cost}</td>\r\n                            <td className={styles.info}>{this.state.currentService.costPeriod}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td id={styles.description} colSpan='3'>\r\n                                <b>Description:</b><br/>\r\n                                <p>{this.state.currentService.description}</p>\r\n                            </td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render () {\r\n        if(this.state.serviceLoaded && this.state.error === null) {\r\n            return (\r\n                <div>\r\n                    {this.currentServiceDisplay()}\r\n                    <br/><br/>\r\n                    {this.registration()}\r\n                </div>\r\n            )\r\n        } else if(this.state.error) {\r\n            return (\r\n                <div>\r\n                    Error fetching service\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>Loading service details</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default ServicePage;","import React, {Component, Fragment} from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link,\n  Redirect,\n  useHistory\n} from 'react-router-dom';\n\nimport MainPage from './pages/main';\nimport NavBar from './pages/NavBar';\nimport LoginPage from './pages/login';\nimport Planner from './pages/planner';\nimport EventPage from './pages/event';\nimport DonationPage from './pages/donate';\nimport VolunteerPage from './pages/volunteer';\nimport ServicePage from './pages/services';\n\n/**\n * This is the router class for the entire project.\n * \n * Routes are added with the following tag structure:\n * \n * <Route path=\"{Path_in_browser}\" component={Imported_Component}/>\n * \n * Router code help credits go to this article by Islem Maboud:\n * https://bit.ly/2O5x1Oz\n * \n */\nclass App extends Component {\n  state = {\n    loggedIn: false,\n    username: null,\n    role: null,\n    nextPage: null\n  };\n\n\n  onLoginSubmit = (username, role) => {\n    console.log(username + \":\" +role);\n\n    this.setState({\n      loggedIn: true,\n      username: username,\n      role: role,\n    });\n  }\n\n  onRegisterSubmit = (username, role) => {\n    console.log(username + \":\" +role);\n    this.setState({\n      loggedIn: true,\n      username: username,\n      role: role\n    });\n  }\n\n  onLogoutSubmit = () => {\n    this.setState({\n      loggedIn: false,\n      username: null,\n      role: null\n    });\n  }\n\n  addNext = (page) => {\n    this.setState({\n      nextPage: page\n    });\n  }\n\n  popNext = () => {\n    let nextPage = '/'\n\n    if(this.state.nextPage) {\n      nextPage = this.state.nextPage;\n    }\n\n    this.setState({\n      nextPage: null\n    });\n\n    return nextPage;\n  }\n\n  async componentDidMount() {\n    document.title = \"Best Community Service\";\n    try {\n      let token = window.sessionStorage.getItem(\"token\");\n      let response = await fetch(\n        '/api/check/',\n        {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':'Bearer ' + token\n            }\n    });\n    if(response.status === 200) {\n      this.setState({\n        loggedIn:true,\n        username: window.sessionStorage.getItem(\"username\"),\n        role: window.sessionStorage.getItem(\"role\")\n      });\n    }\n    } catch(error) {\n      console.log(error);\n    }\n\n  }\n\n\n\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <NavBar username={this.state.username} loggedIn={this.state.loggedIn} role={this.state.role} onLogoutSubmit={this.onLogoutSubmit}/>\n          <Switch>\n            <Route exact path=\"/\" component={MainPage}/>\n            <Route exact path=\"/login\" render={() =>\n              <LoginPage popNext={this.popNext} loggedIn={this.state.loggedIn} onLoginSubmit={this.onLoginSubmit} onRegisterSubmit={this.onRegisterSubmit}/>}\n            />\n            <Route exact path=\"/planner\" render={() =>{\n\n              if(this.state.loggedIn) {\n                if(this.state.role == \"admin\") {\n                  return <Planner addNext={this.addNext} loggedIn={this.state.loggedIn} username={this.state.username}/>\n\n                } else {\n                  return (\n                    <div>\n                      <h1>You are not authorized to access the planner</h1>\n                      <Link to=\"/\">Return to homepage.</Link>\n                    </div>\n                  )\n\n                }\n              } else {\n                return <LoginPage popNext={this.popNext} loggedIn={this.state.loggedIn} onLoginSubmit={this.onLoginSubmit} onRegisterSubmit={this.onRegisterSubmit}/>\n              }\n            }}/>\n\n\n            <Route exact path=\"/donate\" component={DonationPage}/>\n            <Route path=\"/event\" render={() => \n              <EventPage loggedIn={this.state.loggedIn}/>\n            }/>\n            <Route path=\"/service\" render={() => \n              <ServicePage loggedIn={this.state.loggedIn}/>\n            }/>\n        </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}