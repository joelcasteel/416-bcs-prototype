{"version":3,"sources":["pages/login/login.module.css","pages/event/loginpage.module.css","pages/volunteer/volunteer.module.css","pages/donate/donate.module.css","pages/main/eventfeed.module.css","pages/planner/planner.module.css","pages/main/EventFeed.js","pages/main/index.jsx","pages/NavBar.js","pages/login/index.jsx","pages/planner/index.jsx","pages/event/index.jsx","pages/donate/index.jsx","pages/volunteer/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","EventFeed","state","eventsLoaded","events","error","eventLink","srcEvent","to","_uuid","title","eventList","map","event","index","start","Date","startDate","toString","end","endDate","toUTCString","a","fetch","method","headers","response","console","log","json","this","setState","className","styles","eventfeed","Component","MainPage","NavBar","onLogoutclick","props","onLogoutSubmit","loginText","loggedIn","username","onClick","LoginPage","password","onUsernameChange","target","value","onPasswordChange","onLoginButton","onLoginSubmit","onRegisterButton","onRegisterSubmit","redirectBack","nextPage","popNext","logindiv","loginfeed","id","colSpan","entry","type","onChange","buttonrow","login_button_cell","loginbutton","register_button_cell","registerbutton","testEvents","require","Planner","name","participants","services","description","currentEvent","onNameChange","onStartTimeChange","onEndTimeChange","onParticipantsChange","onServicesChange","onDescriptionChange","onSavePressed","newEvent","onClearPressed","redirectLogin","addNext","onEditClick","editEvent","eventTable","feed_div","event_feed","eventFeed","private","eventName","testEvent","startTime","endTime","planner_div","planner_table","entry_prompt","pattern","control_cell","EventPage","currentEventDisplay","details_div","details_table","info","maxSlots","planner","pathname","window","location","slice","eventLoaded","DonationPage","donate_div","donate_table","current","upcoming","VolunteerPage","currentList","oppName","i","opp","volunteerNeeds","totalSlots","remainingSlots","upcomingList","volunteer_div","volunteer_list","App","page","document","exact","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,SAAW,wBAAwB,UAAY,yBAAyB,SAAW,wBAAwB,SAAW,wBAAwB,MAAQ,qBAAqB,UAAY,yBAAyB,kBAAoB,iCAAiC,qBAAuB,oCAAoC,YAAc,2BAA2B,eAAiB,gC,mBCA5YD,EAAOC,QAAU,CAAC,YAAc,+BAA+B,cAAgB,iCAAiC,YAAc,+BAA+B,KAAO,0B,mBCApKD,EAAOC,QAAU,CAAC,cAAgB,iCAAiC,eAAiB,oC,q+ECApFD,EAAOC,QAAU,CAAC,WAAa,2BAA2B,aAAe,+B,mBCAzED,EAAOC,QAAU,CAAC,QAAU,2BAA2B,UAAY,+B,uCCAnED,EAAOC,QAAU,CAAC,YAAc,6BAA6B,cAAgB,+BAA+B,aAAe,8BAA8B,aAAe,8BAA8B,YAAc,6BAA6B,KAAO,sBAAsB,MAAQ,uBAAuB,IAAM,qBAAqB,aAAe,8BAA8B,SAAW,0BAA0B,SAAW,0BAA0B,WAAa,8B,oMC8F7bC,E,4MAxFXC,MAAQ,CACJC,cAAc,EACdC,OAAQ,KACRC,MAAO,M,EAiCXC,UAAY,SAACC,GACT,OAAO,6BAAI,cAAC,IAAD,CAAMC,GAAI,UAAYD,EAASE,MAA/B,SAAuCF,EAASG,W,EAG/DC,UAAY,WACR,OAAO,EAAKT,MAAME,OAAOQ,KAAI,SAACC,EAAOC,GAEjC,IAAIC,EAAQ,IAAIC,KAAKH,EAAMI,UAAUC,YACjCC,EAAM,IAAIH,KAAKH,EAAMO,QAAQF,YAEjC,OACI,+BACK,EAAKZ,UAAUO,GAChB,6BAAKE,EAAMM,gBACX,6BAAKF,EAAIE,kBAHJP,O,8FAzCrB,8BAAAQ,EAAA,+EAE6BC,MACjB,aACA,CACIC,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAPpC,cAEYC,EAFZ,OAUQC,QAAQC,IAAIF,GAVpB,SAY2BA,EAASG,OAZpC,OAYYzB,EAZZ,OAcQuB,QAAQC,IAAIxB,GAEZ0B,KAAKC,SAAS,CACV5B,cAAc,EACdC,OAAQA,IAlBpB,kDAsBQuB,QAAQC,IAAR,MACAE,KAAKC,SAAS,CACV1B,MAAM,EAAD,KAxBjB,0D,0EAmDA,WACI,OAAGyB,KAAK5B,MAAMC,cAAqC,OAArB2B,KAAK5B,MAAMG,MAEjC,qBAAK2B,UAAU,UAAf,SACI,wBAAOA,UAAWC,IAAOC,UAAzB,UACI,gCACI,+BACI,2CAAQ,aACR,2CAAQ,aACR,2CAAQ,aACR,yCAAQ,gBAGhB,gCACKJ,KAAKnB,mBAKhBmB,KAAK5B,MAAMG,MAEb,uDAIA,qD,GApFQ8B,aCaTC,EAdE,kBACb,gCACI,uBAAK,uBACL,wDACA,wJAIA,uBAAK,uBACL,gDACA,cAAC,EAAD,QCqCOC,G,kNA3CXnC,MAAQ,G,EAIRoC,cAAgB,SAAAzB,GACZ,EAAK0B,MAAMC,kB,EAIfC,UAAY,WACR,OAAI,EAAKF,MAAMG,SAKR,eAAC,WAAD,uBAAoB,EAAKH,MAAMI,SAA/B,KAA0C,cAAC,IAAD,CAAMC,QAAS,EAAKN,cAAe9B,GAAG,IAAtC,SAA0C,4CAJhF,cAAC,IAAD,CAAMA,GAAG,SAAT,SAAkB,kD,4CASjC,WACI,OACI,8BACI,uBAAOwB,UAAU,SAAjB,SACI,gCACI,+BACI,oBAAIA,UAAU,OAAd,SAAgC,wDAAP,QACzB,sBAAQ,QACR,6BAAe,cAAC,IAAD,CAAMxB,GAAG,IAAT,SAAa,wCAApB,QACR,6BAAkB,cAAC,IAAD,CAAMA,GAAG,WAAT,SAAoB,iDAA9B,WACR,6BAAoB,cAAC,IAAD,CAAMA,GAAG,aAAT,SAAsB,6CAAlC,aACR,6BAAiB,cAAC,IAAD,CAAMA,GAAG,UAAT,SAAmB,0CAA5B,UACR,sBAAQ,QACR,oBAAIwB,UAAU,QAAd,SAAmCF,KAAKW,aAAd,sB,GAnCjCN,c,iBCqFNU,E,4MAlFX3C,MAAQ,CACJyC,SAAU,KACVG,SAAU,KACVJ,UAAU,G,EAGdK,iBAAmB,SAAAlC,GACf,EAAKkB,SAAS,CACVY,SAAU9B,EAAMmC,OAAOC,S,EAI/BC,iBAAmB,SAAArC,GACf,EAAKkB,SAAS,CACVe,SAAUjC,EAAMmC,OAAOC,S,EAI/BE,cAAgB,SAAAtC,GACT,EAAKX,MAAMyC,UAAY,EAAKzC,MAAM4C,UACjC,EAAKP,MAAMa,cAAc,EAAKlD,MAAMyC,SAAU,EAAKzC,MAAM4C,W,EAIjEO,iBAAmB,SAAAxC,GACZ,EAAKX,MAAMyC,UAAY,EAAKzC,MAAM4C,UACjC,EAAKP,MAAMe,iBAAiB,EAAKpD,MAAMyC,SAAU,EAAKzC,MAAM4C,W,EAIpES,aAAe,WACX,IAAIC,EAAW,EAAKjB,MAAMkB,UACtB,OACI,cAAC,IAAD,CAAUjD,GAAIgD,K,4CAK1B,WACI,OAAI1B,KAAKS,MAAMG,SAmCP,8BACKZ,KAAKyB,iBAlCV,gCACI,uCACA,qBAAKvB,UAAWC,IAAOyB,SAAvB,SACA,uBAAO1B,UAAWC,IAAO0B,UAAzB,SACI,kCACI,6BACI,qBAAIC,GAAI3B,IAAOU,SAAUkB,QAAQ,IAAjC,UACI,yCAAe,uBACf,uBAAO7B,UAAWC,IAAO6B,MAAOC,KAAK,OAAOC,SAAUlC,KAAKiB,uBAH3D,YAMR,6BACI,qBAAIa,GAAI3B,IAAOa,SAAUe,QAAQ,IAAjC,UACI,yCAAe,uBACf,uBAAO7B,UAAWC,IAAO6B,MAAOC,KAAK,WAAWC,SAAUlC,KAAKoB,wBAGvE,qBAAIU,GAAI3B,IAAOgC,UAAf,UACI,oBAAIL,GAAI3B,IAAOiC,kBAAf,SACI,wBAAQN,GAAI3B,IAAOkC,YAAavB,QAASd,KAAKqB,cAA9C,SAA6D,0CAEjE,oBAAIS,GAAI3B,IAAOmC,qBAAf,SACI,wBAAQR,GAAI3B,IAAOoC,eAAgBzB,QAASd,KAAKuB,iBAAjD,SAAmE,8D,GAnE/ElB,a,gBCAlBmC,EAAaC,EAAQ,IA+MZC,E,4MA3MXtE,MAAQ,CACJuE,KAAM,GACN1D,MAAO,GACPI,IAAK,GACLuD,aAAc,EACdC,SAAU,GACVC,YAAa,GAEbC,aAAc,M,EAGlBC,aAAe,SAAAjE,GACX,EAAKkB,SAAS,CACV0C,KAAM5D,EAAMmC,OAAOC,S,EAI3B8B,kBAAoB,SAAAlE,GAChB,EAAKkB,SAAS,CACVhB,MAAOF,EAAMmC,OAAOC,S,EAI5B+B,gBAAkB,SAAAnE,GACd,EAAKkB,SAAS,CACVZ,IAAKN,EAAMmC,OAAOC,S,EAI1BgC,qBAAuB,SAAApE,GACnB,EAAKkB,SAAS,CACV2C,aAAc7D,EAAMmC,OAAOC,S,EAInCiC,iBAAmB,SAAArE,GACf,EAAKkB,SAAS,CACV4C,SAAU9D,EAAMmC,OAAOC,S,EAI/BkC,oBAAsB,SAAAtE,GAClB,EAAKkB,SAAS,CACV6C,YAAa/D,EAAMmC,OAAOC,S,EAIlCmC,cAAgB,SAAAvE,GACZ,IAAIwE,EAAW,CACXZ,KAAM,EAAKvE,MAAMuE,KACjB1D,MAAO,IAAIC,KAAK,EAAKd,MAAMa,OAC3BI,IAAK,IAAIH,KAAK,EAAKd,MAAMiB,KACzBuD,aAAc,EAAKxE,MAAMwE,aACzBC,SAAU,EAAKzE,MAAMyE,SACrBC,YAAa,EAAK1E,MAAM0E,aAG5B,EAAK7C,SAAS,CACV0C,KAAM,GACN1D,MAAO,GACPI,IAAK,GACLuD,aAAc,EACdC,SAAU,GACVC,YAAa,GAEbC,aAAcQ,K,EAItBC,eAAiB,SAAAzE,GACb,EAAKkB,SAAS,CACV0C,KAAM,GACN1D,MAAO,GACPI,IAAK,GACLuD,aAAc,EACdC,SAAU,GACVC,YAAa,M,EAIrBW,cAAgB,WAEZ,OADA,EAAKhD,MAAMiD,QAAQ,YACZ,cAAC,IAAD,CAAUhF,GAAG,Y,EAGxBiF,YAAc,SAASC,GAGnB5D,KAAKC,SAAS,CACV0C,KAAMiB,EAAUjB,KAChB1D,MAAO2E,EAAU3E,MACjBI,IAAKuE,EAAU3E,MACf2D,aAAcgB,EAAUhB,aACxBC,SAAUe,EAAUf,SACpBC,YAAac,EAAUd,e,EAI/Be,WAAa,WACT,OACI,qBAAK3D,UAAWC,IAAO2D,SAAvB,SACI,wBAAO5D,UAAWC,IAAO4D,WAAzB,UACA,gCACQ,+BACI,2CAAQ,aACR,2CAAQ,SACR,yCAAQ,OACR,6CAAQ,gBACR,yCAAQ,YACR,4CAAQ,eACR,sBAAQ,mBAGhB,gCACK,EAAKC,oB,EAQ1BA,UAAY,WACR,OAAOxB,EAAWyB,QAAQnF,KAAI,SAACoF,EAAWlF,GACtC,IAAImF,EAAY3B,EAAWlE,OAAO4F,GAClC,OACI,+BACI,6BAAKC,EAAUxB,OACf,6BAAK,IAAIzD,KAAKiF,EAAUC,WAAW7E,gBACnC,6BAAK,IAAIL,KAAKiF,EAAUE,SAAS9E,gBACjC,6BAAK4E,EAAUvB,eACf,6BAAKuB,EAAUtB,WACf,6BAAKsB,EAAUrB,cACf,6BAAe,wBAAQhC,QAAS,kBAAM,EAAK6C,YAAYQ,IAAxC,mBAAP,UAPHnF,O,4CAarB,WACI,OAAGgB,KAAKS,MAAMG,SAEN,gCACI,sBAAKV,UAAWC,IAAOmE,YAAvB,UACI,8CACA,wBAAOpE,UAAWC,IAAOoE,cAAzB,UACI,kCACI,+BACI,oBAAIrE,UAAWC,IAAOqE,aAAtB,wBACA,oBAAIzC,QAAQ,IAAZ,SAAgB,uBAAOD,GAAI3B,IAAOwC,KAAMV,KAAK,OAAOd,MAAOnB,KAAK5B,MAAMuE,KAAMT,SAAUlC,KAAKgD,mBAFvF,cAIR,+BACI,oBAAI9C,UAAWC,IAAOqE,aAAtB,wBACA,6BAAI,uBAAO1C,GAAI3B,IAAOlB,MAAOgD,KAAK,iBAAiBd,MAAOnB,KAAK5B,MAAMa,MAAOiD,SAAUlC,KAAKiD,sBAC3F,oBAAI/C,UAAWC,IAAOqE,aAAtB,sBACA,6BAAI,uBAAO1C,GAAI3B,IAAOd,IAAK4C,KAAK,iBAAiBd,MAAOnB,KAAK5B,MAAMiB,IAAK6C,SAAUlC,KAAKkD,sBAJnF,cAMR,+BACI,oBAAIhD,UAAWC,IAAOqE,aAAtB,0BACA,6BAAI,uBAAO1C,GAAI3B,IAAOyC,aAAcX,KAAK,OAAOwC,QAAQ,WAAWtD,MAAOnB,KAAK5B,MAAMwE,aAAcV,SAAUlC,KAAKmD,yBAClH,oBAAIjD,UAAWC,IAAOqE,aAAtB,2CACA,6BAAI,uBAAO1C,GAAI3B,IAAO0C,SAAUZ,KAAK,OAAOd,MAAOnB,KAAK5B,MAAMyE,SAAUX,SAAUlC,KAAKoD,uBAJnF,iBAMR,+BACI,oBAAIlD,UAAWC,IAAOqE,aAAtB,yBACA,oBAAIzC,QAAQ,IAAZ,SAAgB,0BAAUD,GAAI3B,IAAO2C,YAAa3B,MAAOnB,KAAK5B,MAAM0E,YAAaZ,SAAUlC,KAAKqD,0BAF5F,wBAMZ,gCACI,+BACI,oBAAInD,UAAWC,IAAOuE,aAAc3C,QAAQ,IAA5C,SACI,wBAAQjB,QAASd,KAAKsD,cAAtB,0BAIJ,oBAAIpD,UAAWC,IAAOuE,aAAc3C,QAAQ,IAA5C,SACA,wBAAQjB,QAASd,KAAKwD,eAAtB,sCAQhB,gCACI,gDACA,8BACKxD,KAAK6D,qBAOlB,8BACK7D,KAAKyD,sB,GAtMJpD,a,iBCoGPsE,GAtGElC,EAAQ,IAAyBnE,O,kDAI9C,aAAe,IAAD,uBACV,gBA0CJsG,oBAAsB,WAClB,OACI,sBAAK1E,UAAWC,IAAO0E,YAAvB,UACI,6BAAK,EAAKzG,MAAM2E,aAAanE,QAC7B,wBAAOsB,UAAWC,IAAO2E,cAAzB,UACI,gCACI,+BACI,2CAAQ,SACR,yCAAQ,OACR,8CAAQ,aACR,8CAAQ,gBAGhB,gCACI,+BACI,oBAAI5E,UAAWC,IAAO4E,KAAtB,SAA6B,IAAI7F,KAAK,EAAKd,MAAM2E,aAAaqB,WAAW7E,gBACzE,oBAAIW,UAAWC,IAAO4E,KAAtB,SAA6B,IAAI7F,KAAK,EAAKd,MAAM2E,aAAasB,SAAS9E,gBACvE,oBAAIW,UAAWC,IAAO4E,KAAtB,SAA6B,EAAK3G,MAAM2E,aAAaiC,WACrD,oBAAI9E,UAAWC,IAAO4E,KAAtB,SAA6B,EAAK3G,MAAM2E,aAAakC,eAG7D,gCACI,6BACI,qBAAInD,GAAI3B,IAAO2C,YAAaf,QAAQ,IAApC,UACI,6CAAmB,uBACnB,4BAAI,EAAK3D,MAAM2E,aAAaD,4BAlEpD,IAAIoC,EAAWC,OAAOC,SAASF,SAASG,MAAM,GAFpC,OAGVxF,QAAQC,IAAIoF,GAEZ,EAAK9G,MAAQ,CACT8G,SAAUA,EACVnC,aAAc,KACduC,aAAa,EACb/G,MAAO,MATD,E,4FAad,8BAAAiB,EAAA,+EAE6BC,MACjB,cAAgBO,KAAK5B,MAAM8G,SAC3B,CACIxF,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAPpC,cAEYC,EAFZ,OAUQC,QAAQC,IAAIF,GAVpB,SAY0BA,EAASG,OAZnC,OAYYhB,EAZZ,OAcQc,QAAQC,IAAIf,GAEZiB,KAAKC,SAAS,CACVqF,aAAa,EACbvC,aAAchE,IAlB1B,kDAsBQc,QAAQC,IAAR,MACAE,KAAKC,SAAS,CACV1B,MAAM,EAAD,KAxBjB,0D,0EAgEA,WACI,OAAGyB,KAAK5B,MAAMkH,aAAoC,OAArBtF,KAAK5B,MAAMG,MAEhC,8BACKyB,KAAK4E,wBAGR5E,KAAK5B,MAAMG,MAEb,uDAMA,4D,GA9FQ8B,c,iBCiCTkF,E,4JAlCX,WACI,OACI,sBAAKrF,UAAWC,IAAOqF,WAAvB,UACI,2CACA,yHAC4F,uBAD5F,4EAE6E,uBAF7E,gDAKA,wBAAOtF,UAAWC,IAAOsF,aAAzB,UACI,gCACI,+BACI,6BAAI,0DACJ,6BAAI,6DAGZ,gCACI,+BACI,6BACI,cAAC,IAAD,2CAEJ,+BACI,uBAAOxD,KAAK,SACZ,uBACA,8D,GAzBL5B,a,iBCAvBmC,EAAaC,EAAQ,IAGrBiD,EAAU,CACV,CAAClD,EAAU,OAAW,GAAI,YAC1B,CAACA,EAAU,OAAW,GAAI,YAG1BmD,EAAW,CACXnD,EAAU,OAAW,GACrBA,EAAU,OAAW,IAwGVoD,E,4MAlGXC,YAAc,WACV,OAAOH,EAAQ5G,KAAI,SAACgH,EAASC,GACzBlG,QAAQC,IAAIgG,GACZ,IAAIE,EAAMxD,EAAWlE,OAAOwH,EAAQ,IACpC,OACI,+BACI,6BAAKE,EAAIrD,OACT,oBAAIZ,QAAQ,IAAZ,SAAiBiE,EAAIC,iBACrB,6BAAKH,EAAQ,KACb,6BAAKE,EAAI5B,YACT,6BAAK4B,EAAI3B,UACT,6BAAK2B,EAAIE,aACT,6BAAKF,EAAIG,iBACT,6BAAI,4DARCJ,O,EAcrBK,aAAe,WACX,OAAOT,EAAS7G,KAAI,SAACgH,EAASC,GAC1B,IAAIC,EAAMxD,EAAWlE,OAAOwH,GAC5B,OACI,+BACI,6BAAKE,EAAIrD,OACT,oBAAIZ,QAAQ,IAAZ,SAAiBiE,EAAIC,iBACrB,6BAAKD,EAAI5B,YACT,6BAAK4B,EAAI3B,UACT,6BAAK2B,EAAIE,aACT,6BAAKF,EAAIG,iBACT,6BAAI,4DAPCJ,O,EAarBtC,cAAgB,WAEZ,OADA,EAAKhD,MAAMiD,QAAQ,cACZ,cAAC,IAAD,CAAUhF,GAAG,Y,4CAGxB,WACI,OAAGsB,KAAKS,MAAMG,SAEN,gCACI,sBAAKV,UAAWC,IAAOkG,cAAvB,UACI,mEACA,wBAAOnG,UAAWC,IAAOmG,eAAzB,UACI,gCACI,+BACI,qCAAQ,aACR,oBAAqBvE,QAAQ,IAA7B,wCAAQ,cACR,gDAAQ,YACR,2CAAQ,aACR,yCAAQ,WACR,4CAAQ,cACR,gDAAQ,kBACR,sBAAQ,eAGhB,gCACK/B,KAAK6F,sBAIlB,uBACA,uBACA,sBAAK3F,UAAWC,IAAOkG,cAAvB,UACI,wDACA,wBAAOnG,UAAWC,IAAOmG,eAAzB,UACI,gCACI,+BACI,qCAAQ,aACR,oBAAqBvE,QAAQ,IAA7B,wCAAQ,cACR,2CAAQ,aACR,yCAAQ,WACR,4CAAQ,cACR,gDAAQ,kBACR,sBAAQ,eAGhB,gCACK/B,KAAKoG,0BAQtB,8BACKpG,KAAKyD,sB,GA9FEpD,aC+FbkG,E,4MAlFbnI,MAAQ,CACNwC,UAAU,EACVC,SAAU,KACVa,SAAU,M,EAIZJ,cAAgB,SAACT,EAAUG,GACzBnB,QAAQC,IAAIe,EAAW,IAAKG,GAE5B,EAAKf,SAAS,CACZW,UAAU,EACVC,SAAUA,K,EAIdW,iBAAmB,SAACX,EAAUG,GAC5BnB,QAAQC,IAAIe,EAAW,IAAKG,GAC5B,EAAKf,SAAS,CACZW,UAAU,EACVC,SAAUA,K,EAIdH,eAAiB,WACf,EAAKT,SAAS,CACZW,UAAU,EACVC,SAAU,Q,EAId6C,QAAU,SAAC8C,GACT,EAAKvG,SAAS,CACZyB,SAAU8E,K,EAId7E,QAAU,WACR,IAAID,EAAW,IAUf,OARG,EAAKtD,MAAMsD,WACZA,EAAW,EAAKtD,MAAMsD,UAGxB,EAAKzB,SAAS,CACZyB,SAAU,OAGLA,G,uDAGT,WACE+E,SAAS7H,MAAQ,2B,oBAKnB,WAAU,IAAD,OACP,OACE,cAAC,IAAD,UACE,gCACE,cAAC,EAAD,CAAQiC,SAAUb,KAAK5B,MAAMyC,SAAUD,SAAUZ,KAAK5B,MAAMwC,SAAUF,eAAgBV,KAAKU,iBAC3F,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgG,OAAK,EAACC,KAAK,IAAIC,UAAWtG,IACjC,cAAC,IAAD,CAAOoG,OAAK,EAACC,KAAK,SAASE,OAAQ,kBACjC,cAAC,EAAD,CAAWlF,QAAS,EAAKA,QAASf,SAAU,EAAKxC,MAAMwC,SAAUU,cAAe,EAAKA,cAAeE,iBAAkB,EAAKA,sBAE7H,cAAC,IAAD,CAAOkF,OAAK,EAACC,KAAK,WAAWE,OAAQ,kBACnC,cAAC,EAAD,CAASnD,QAAS,EAAKA,QAAS9C,SAAU,EAAKxC,MAAMwC,cAEvD,cAAC,IAAD,CAAO8F,OAAK,EAACC,KAAK,aAAaE,OAAQ,kBACrC,cAAC,EAAD,CAAenD,QAAS,EAAKA,QAAS9C,SAAU,EAAKxC,MAAMwC,cAE7D,cAAC,IAAD,CAAO8F,OAAK,EAACC,KAAK,UAAUC,UAAWrB,IACvC,cAAC,IAAD,CAAOoB,KAAK,SAASC,UAAWjC,gB,GA3E1BtE,aClBHyG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,EAAD,MAEFf,SAASgB,eAAe,SAM1BX,M","file":"static/js/main.4efe0be7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logindiv\":\"login_logindiv__2lyMY\",\"loginfeed\":\"login_loginfeed__2VZuP\",\"username\":\"login_username__11JhW\",\"password\":\"login_password__1o_F_\",\"entry\":\"login_entry__1UeXW\",\"buttonrow\":\"login_buttonrow__1zB-z\",\"login_button_cell\":\"login_login_button_cell__2ncw0\",\"register_button_cell\":\"login_register_button_cell__2TNMB\",\"loginbutton\":\"login_loginbutton__3ZEhI\",\"registerbutton\":\"login_registerbutton__34Rin\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"details_div\":\"loginpage_details_div__2QSQN\",\"details_table\":\"loginpage_details_table__13W72\",\"description\":\"loginpage_description__11voP\",\"info\":\"loginpage_info__258Ff\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"volunteer_div\":\"volunteer_volunteer_div__K_j39\",\"volunteer_list\":\"volunteer_volunteer_list__2_9sw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"donate_div\":\"donate_donate_div__2me51\",\"donate_table\":\"donate_donate_table__30ETH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedDiv\":\"eventfeed_feedDiv__Ichvb\",\"eventfeed\":\"eventfeed_eventfeed__2QGIS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"planner_div\":\"planner_planner_div__2Buh9\",\"planner_table\":\"planner_planner_table__1lQrd\",\"entry_prompt\":\"planner_entry_prompt__BB0o3\",\"control_cell\":\"planner_control_cell__2yOgP\",\"description\":\"planner_description__2PY3s\",\"name\":\"planner_name__M6dy7\",\"start\":\"planner_start__mAOZa\",\"end\":\"planner_end__1GoCq\",\"participants\":\"planner_participants__d1TfE\",\"services\":\"planner_services__3Q9T_\",\"feed_div\":\"planner_feed_div__2nXc8\",\"event_feed\":\"planner_event_feed__1FjjB\"};","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport styles from './eventfeed.module.css'\r\n\r\nclass EventFeed extends Component {\r\n\r\n    state = {\r\n        eventsLoaded: false,\r\n        events: null,\r\n        error: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let response = await fetch(\r\n                '/api/event',\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n            });\r\n            console.log(response);\r\n\r\n            let events = await response.json();\r\n\r\n            console.log(events);\r\n\r\n            this.setState({\r\n                eventsLoaded: true,\r\n                events: events\r\n            });\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({\r\n                error:error\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    eventLink = (srcEvent) => {\r\n        return <td><Link to={'/event/' + srcEvent._uuid}>{srcEvent.title}</Link></td>\r\n    }\r\n\r\n    eventList = () => {\r\n        return this.state.events.map((event, index) => {\r\n            \r\n            let start = new Date(event.startDate.toString());\r\n            let end = new Date(event.endDate.toString());\r\n\r\n            return (\r\n                <tr key={index}>\r\n                    {this.eventLink(event)}\r\n                    <td>{start.toUTCString()}</td>\r\n                    <td>{end.toUTCString()}</td>\r\n                </tr>\r\n            )\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.state.eventsLoaded && this.state.error === null) {\r\n            return (\r\n                <div className=\"feedDiv\">\r\n                    <table className={styles.eventfeed}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th key='eventName'>Event Name</th>\r\n                                <th key='eventType'>Event Type</th>\r\n                                <th key='startTime'>Start Time</th>\r\n                                <th key='endTime'>End Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.eventList()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        } else if(this.state.error) {\r\n            return (\r\n                <div>Error Loading Events</div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>Loading Events</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventFeed;","import React from 'react';\r\n\r\nimport EventFeed from './EventFeed';\r\n\r\nconst MainPage = () => (\r\n    <div>\r\n        <br/><br/>\r\n        <h1>Best Community Service</h1>\r\n        <p>\r\n            Best Community Service is dedicated to making an impact locally through our many events\r\n            and volunteering opportunities.\r\n        </p>\r\n        <br/><br/>\r\n        <h2>Event Schedule</h2>\r\n        <EventFeed/>\r\n    </div>\r\n)\r\n\r\nexport default MainPage;","import React, {Component, Fragment} from 'react';\r\nimport { Redirect} from 'react-router';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport'./navbar.css';\r\n\r\nclass NavBar extends Component {\r\n\r\n    state = {\r\n        //loggedIn: false\r\n    }\r\n\r\n    onLogoutclick = event => {\r\n        this.props.onLogoutSubmit();\r\n    };\r\n\r\n\r\n    loginText = () => {\r\n        if(!this.props.loggedIn) {\r\n            return <Link to=\"/login\"><b>Login/Register</b></Link>;\r\n            \r\n        }\r\n\r\n        return <Fragment>Welcome, {this.props.username}. <Link onClick={this.onLogoutclick} to='/'><b>Logout</b></Link></Fragment>;\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table className='navbar'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className='logo' key='logo'><b>Best Community Service</b></td>\r\n                            <td key='pad0'></td>\r\n                            <td key='home'><Link to=\"/\"><b>Home</b></Link></td>\r\n                            <td key='planner'><Link to=\"/planner\"><b>Event Planner</b></Link></td>\r\n                            <td key='volunteer'><Link to=\"/volunteer\"><b>Volunteer</b></Link></td>\r\n                            <td key='donate'><Link to=\"/donate\"><b>Donate</b></Link></td>\r\n                            <td key='pad1'></td>\r\n                            <td className='login' key='login'>{this.loginText()}</td>\r\n                            \r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, {Component} from 'react';\r\nimport {Redirect, useHistory} from 'react-router-dom';\r\n\r\nimport styles from './login.module.css';\r\n\r\nclass LoginPage extends Component {\r\n\r\n    \r\n\r\n    state = {\r\n        username: null,\r\n        password: null,\r\n        loggedIn: false,\r\n    }\r\n\r\n    onUsernameChange = event => {\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n\r\n    onPasswordChange = event => {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    onLoginButton = event => {\r\n        if(this.state.username && this.state.password) {\r\n            this.props.onLoginSubmit(this.state.username, this.state.password);\r\n        }\r\n    }\r\n\r\n    onRegisterButton = event => {\r\n        if(this.state.username && this.state.password) {\r\n            this.props.onRegisterSubmit(this.state.username, this.state.password);\r\n        }\r\n    }\r\n\r\n    redirectBack = () => {\r\n        let nextPage = this.props.popNext();\r\n            return (\r\n                <Redirect to={nextPage}/>\r\n            )\r\n    }\r\n\r\n\r\n    render() {\r\n        if(!this.props.loggedIn) {\r\n            return (\r\n                <div>\r\n                    <h1>Login</h1>\r\n                    <div className={styles.logindiv}>\r\n                    <table className={styles.loginfeed}>\r\n                        <tbody>\r\n                            <tr key='username'>\r\n                                <td id={styles.username} colSpan='2'>\r\n                                    <b>Username</b><br/>\r\n                                    <input className={styles.entry} type='text' onChange={this.onUsernameChange}></input>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td id={styles.password} colSpan='2'>\r\n                                    <b>Password</b><br/>\r\n                                    <input className={styles.entry} type='password' onChange={this.onPasswordChange}></input>\r\n                                </td>\r\n                            </tr>\r\n                            <tr id={styles.buttonrow}>\r\n                                <td id={styles.login_button_cell}>\r\n                                    <button id={styles.loginbutton} onClick={this.onLoginButton}><b>Login</b></button>\r\n                                </td>\r\n                                <td id={styles.register_button_cell}>\r\n                                    <button id={styles.registerbutton} onClick={this.onRegisterButton}><b>Register</b></button>\r\n                                </td>\r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {this.redirectBack()}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default LoginPage;","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport styles from './planner.module.css';\r\n\r\nconst testEvents = require('../../testEvents.json');\r\n\r\nclass Planner extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        start: '',\r\n        end: '',\r\n        participants: 0,\r\n        services: '',\r\n        description: '',\r\n\r\n        currentEvent: null\r\n    }\r\n\r\n    onNameChange = event => {\r\n        this.setState({\r\n            name: event.target.value\r\n        });\r\n    }\r\n\r\n    onStartTimeChange = event => {\r\n        this.setState({\r\n            start: event.target.value\r\n        });\r\n    }\r\n    \r\n    onEndTimeChange = event => {\r\n        this.setState({\r\n            end: event.target.value\r\n        });\r\n    }\r\n\r\n    onParticipantsChange = event => {\r\n        this.setState({\r\n            participants: event.target.value\r\n        });\r\n    }\r\n\r\n    onServicesChange = event => {\r\n        this.setState({\r\n            services: event.target.value\r\n        });\r\n    }\r\n\r\n    onDescriptionChange = event => {\r\n        this.setState({\r\n            description: event.target.value\r\n        });\r\n    }\r\n\r\n    onSavePressed = event => {\r\n        let newEvent = {\r\n            name: this.state.name,\r\n            start: new Date(this.state.start),\r\n            end: new Date(this.state.end),\r\n            participants: this.state.participants,\r\n            services: this.state.services,\r\n            description: this.state.description\r\n        };\r\n\r\n        this.setState({\r\n            name: '',\r\n            start: '',\r\n            end: '',\r\n            participants: 0,\r\n            services: '',\r\n            description: '',\r\n\r\n            currentEvent: newEvent\r\n        });\r\n    }\r\n\r\n    onClearPressed = event => {\r\n        this.setState({\r\n            name: '',\r\n            start: '',\r\n            end: '',\r\n            participants: 0,\r\n            services: '',\r\n            description: ''\r\n        });\r\n    }\r\n\r\n    redirectLogin = () => {\r\n        this.props.addNext('/planner');\r\n        return <Redirect to='/login'/>\r\n    }\r\n\r\n    onEditClick = function(editEvent) {\r\n\r\n\r\n        this.setState({\r\n            name: editEvent.name,\r\n            start: editEvent.start,\r\n            end: editEvent.start,\r\n            participants: editEvent.participants,\r\n            services: editEvent.services,\r\n            description: editEvent.description\r\n        });\r\n    }\r\n\r\n    eventTable = () => {\r\n        return (\r\n            <div className={styles.feed_div}>\r\n                <table className={styles.event_feed}>\r\n                <thead>\r\n                        <tr>\r\n                            <th key='eventName'>Event Name</th>\r\n                            <th key='start'>Start Time</th>\r\n                            <th key='end'>End Time</th>\r\n                            <th key='participants'>Participants</th>\r\n                            <th key='services'>Services</th>\r\n                            <th key='description'>Description</th>\r\n                            <th key='edit-blank'></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.eventFeed()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    eventFeed = () => {\r\n        return testEvents.private.map((eventName, index) => {\r\n            let testEvent = testEvents.events[eventName];\r\n            return (\r\n                <tr key={index}>\r\n                    <td>{testEvent.name}</td>\r\n                    <td>{new Date(testEvent.startTime).toUTCString()}</td>\r\n                    <td>{new Date(testEvent.endTime).toUTCString()}</td>\r\n                    <td>{testEvent.participants}</td>\r\n                    <td>{testEvent.services}</td>\r\n                    <td>{testEvent.description}</td>\r\n                    <td key='edit'><button onClick={() => this.onEditClick(testEvent)}>Edit</button></td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.props.loggedIn) {\r\n            return (\r\n                <div>\r\n                    <div className={styles.planner_div}>\r\n                        <h3>Create Event</h3>\r\n                        <table className={styles.planner_table}>\r\n                            <tbody>\r\n                                <tr key=\"event-name\">\r\n                                    <td className={styles.entry_prompt}>Event Name</td>\r\n                                    <td colSpan='3'><input id={styles.name} type='text' value={this.state.name} onChange={this.onNameChange}></input></td>\r\n                                </tr>\r\n                                <tr key=\"event-time\">\r\n                                    <td className={styles.entry_prompt}>Start Time</td>\r\n                                    <td><input id={styles.start} type='datetime-local' value={this.state.start} onChange={this.onStartTimeChange}></input></td>\r\n                                    <td className={styles.entry_prompt}>End Time</td>\r\n                                    <td><input id={styles.end} type='datetime-local' value={this.state.end} onChange={this.onEndTimeChange}></input></td>\r\n                                </tr>\r\n                                <tr key=\"event-details\">\r\n                                    <td className={styles.entry_prompt}>Participants</td>\r\n                                    <td><input id={styles.participants} type='text' pattern='^[0-9]*$' value={this.state.participants} onChange={this.onParticipantsChange}></input></td>\r\n                                    <td className={styles.entry_prompt}>Additional Services Requested</td>\r\n                                    <td><input id={styles.services} type='text' value={this.state.services} onChange={this.onServicesChange}></input></td>\r\n                                </tr>\r\n                                <tr key=\"event-description\">\r\n                                    <td className={styles.entry_prompt}>Description</td>\r\n                                    <td colSpan='3'><textarea id={styles.description} value={this.state.description} onChange={this.onDescriptionChange}></textarea></td>\r\n                                    \r\n                                </tr>\r\n                            </tbody>\r\n                            <tfoot>\r\n                                <tr>\r\n                                    <td className={styles.control_cell} colSpan='2'>\r\n                                        <button onClick={this.onSavePressed}>\r\n                                            Save Event\r\n                                        </button>\r\n                                    </td>\r\n                                    <td className={styles.control_cell} colSpan='2'>\r\n                                    <button onClick={this.onClearPressed}>\r\n                                            Clear Event\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tfoot>\r\n                        </table>\r\n                    </div>\r\n                    <div>\r\n                        <h3>Planned Events</h3>\r\n                        <div>\r\n                            {this.eventTable()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    {this.redirectLogin()}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Planner;","import React, {Component, Fragment} from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nimport styles from './loginpage.module.css';\r\n\r\nlet testEvents = require('../../testEvents.json').events;\r\n\r\nclass EventPage extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        let pathname = window.location.pathname.slice(7);\r\n        console.log(pathname);\r\n\r\n        this.state = {\r\n            pathname: pathname,\r\n            currentEvent: null,\r\n            eventLoaded: false,\r\n            error: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let response = await fetch(\r\n                '/api/event/' + this.state.pathname,\r\n                {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n            });\r\n            console.log(response);\r\n\r\n            let event = await response.json();\r\n\r\n            console.log(event);\r\n\r\n            this.setState({\r\n                eventLoaded: true,\r\n                currentEvent: event\r\n            });\r\n\r\n        } catch(error) {\r\n            console.log(error);\r\n            this.setState({\r\n                error:error\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    currentEventDisplay = () => {\r\n        return (\r\n            <div className={styles.details_div}>\r\n                <h1>{this.state.currentEvent.title}</h1>\r\n                <table className={styles.details_table}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th key=\"start\">Start Time</th>\r\n                            <th key=\"end\">End Time</th>\r\n                            <th key=\"attendees\">Max Attendees</th>\r\n                            <th key=\"planner\">Event Planner</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className={styles.info}>{new Date(this.state.currentEvent.startTime).toUTCString()}</td>\r\n                            <td className={styles.info}>{new Date(this.state.currentEvent.endTime).toUTCString()}</td>\r\n                            <td className={styles.info}>{this.state.currentEvent.maxSlots}</td>\r\n                            <td className={styles.info}>{this.state.currentEvent.planner}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td id={styles.description} colSpan='4'>\r\n                                <b>Description:</b><br/>\r\n                                <p>{this.state.currentEvent.description}</p>\r\n                            </td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render () {\r\n        if(this.state.eventLoaded && this.state.error === null) {\r\n            return (\r\n                <div>\r\n                    {this.currentEventDisplay()}\r\n                </div>\r\n            )\r\n        } else if(this.state.error) {\r\n            return (\r\n                <div>\r\n                    Error fetching event\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>Loading event details</div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventPage;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport styles from './donate.module.css';\r\n\r\nclass DonationPage extends Component {\r\n    render () {\r\n        return (\r\n            <div className={styles.donate_div}>\r\n                <h1>Donations</h1>\r\n                <p>\r\n                    Here at Best Community Service, we are dedicated to making the most of what we're given.<br/>\r\n                    To make a donation please download, fill out, and upload a donation form.<br/>\r\n                    We'll contact you to complete the process.\r\n                </p>\r\n                <table className={styles.donate_table}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th><b>Download Donation Forms</b></th>\r\n                            <th><b>Upload Donation Forms</b></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <Link>BCS_Donation_Form_2021.pdf</Link>\r\n                            </td>\r\n                            <td>\r\n                                <input type='file'/>\r\n                                <br/>\r\n                                <button>Submit</button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DonationPage;","import React, {Component} from 'react';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport styles from './volunteer.module.css';\r\nlet testEvents = require('../../testEvents.json');\r\n\r\n\r\nlet current = [\r\n    [testEvents['public'][0], \"Approved\"],\r\n    [testEvents['public'][1], \"Pending\"]\r\n];\r\n\r\nlet upcoming = [\r\n    testEvents['public'][2],\r\n    testEvents['public'][3]\r\n];\r\n\r\nclass VolunteerPage extends Component {\r\n\r\n\r\n    currentList = () => {\r\n        return current.map((oppName, i) => {\r\n            console.log(oppName)\r\n            let opp = testEvents.events[oppName[0]];\r\n            return (\r\n                <tr key={i}>\r\n                    <td>{opp.name}</td>\r\n                    <td colSpan='2'>{opp.volunteerNeeds}</td>\r\n                    <td>{oppName[1]}</td>\r\n                    <td>{opp.startTime}</td>\r\n                    <td>{opp.endTime}</td>\r\n                    <td>{opp.totalSlots}</td>\r\n                    <td>{opp.remainingSlots}</td>\r\n                    <td><button>Remove Application</button></td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    upcomingList = () => {\r\n        return upcoming.map((oppName, i) => {\r\n            let opp = testEvents.events[oppName];\r\n            return(\r\n                <tr key={i}>\r\n                    <td>{opp.name}</td>\r\n                    <td colSpan='2'>{opp.volunteerNeeds}</td>\r\n                    <td>{opp.startTime}</td>\r\n                    <td>{opp.endTime}</td>\r\n                    <td>{opp.totalSlots}</td>\r\n                    <td>{opp.remainingSlots}</td>\r\n                    <td><button>Submit Application</button></td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    redirectLogin = () => {\r\n        this.props.addNext('/volunteer');\r\n        return <Redirect to='/login'/>\r\n    }\r\n\r\n    render() {\r\n        if(this.props.loggedIn) {\r\n            return (\r\n                <div>\r\n                    <div className={styles.volunteer_div}>\r\n                        <h3>Current Volunteering Applications</h3>\r\n                        <table className={styles.volunteer_list}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th key='eventName'>Name</th>\r\n                                    <th key='eventNeeds' colSpan='2'>Volunteer Needs Description</th>\r\n                                    <th key='approval'>Approval Status</th>\r\n                                    <th key='startTime'>Start Time</th>\r\n                                    <th key='endTime'>End Time</th>\r\n                                    <th key='totalSlots'>Total Slots</th>\r\n                                    <th key='remainingSlots'>Remaining Slots</th>\r\n                                    <th key='button'></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.currentList()}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <br/>\r\n                    <br/>\r\n                    <div className={styles.volunteer_div}>\r\n                        <h3>Upcoming Opportunities</h3>\r\n                        <table className={styles.volunteer_list}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th key='eventName'>Name</th>\r\n                                    <th key='eventNeeds' colSpan='2'>Volunteer Needs Description</th>\r\n                                    <th key='startTime'>Start Time</th>\r\n                                    <th key='endTime'>End Time</th>\r\n                                    <th key='totalSlots'>Total Slots</th>\r\n                                    <th key='remainingSlots'>Remaining Slots</th>\r\n                                    <th key='button'></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.upcomingList()}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            )\r\n            } else {\r\n            return(\r\n                <div>\r\n                    {this.redirectLogin()}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default VolunteerPage;","import React, {Component, Fragment} from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link,\n  Redirect,\n  useHistory\n} from 'react-router-dom';\n\nimport MainPage from './pages/main';\nimport NavBar from './pages/NavBar';\nimport LoginPage from './pages/login';\nimport Planner from './pages/planner';\nimport EventPage from './pages/event';\nimport DonationPage from './pages/donate';\nimport VolunteerPage from './pages/volunteer';\n\n/**\n * This is the router class for the entire project.\n * \n * Routes are added with the following tag structure:\n * \n * <Route path=\"{Path_in_browser}\" component={Imported_Component}/>\n * \n * Router code help credits go to this article by Islem Maboud:\n * https://bit.ly/2O5x1Oz\n * \n */\nclass App extends Component {\n  state = {\n    loggedIn: false,\n    username: null,\n    nextPage: null\n  };\n\n\n  onLoginSubmit = (username, password) => {\n    console.log(username + \":\" +password);\n\n    this.setState({\n      loggedIn: true,\n      username: username\n    });\n  }\n\n  onRegisterSubmit = (username, password) => {\n    console.log(username + \":\" +password);\n    this.setState({\n      loggedIn: true,\n      username: username\n    });\n  }\n\n  onLogoutSubmit = () => {\n    this.setState({\n      loggedIn: false,\n      username: null\n    });\n  }\n\n  addNext = (page) => {\n    this.setState({\n      nextPage: page\n    });\n  }\n\n  popNext = () => {\n    let nextPage = '/'\n\n    if(this.state.nextPage) {\n      nextPage = this.state.nextPage;\n    }\n\n    this.setState({\n      nextPage: null\n    });\n\n    return nextPage;\n  }\n\n  componentDidMount() {\n    document.title = \"Best Community Service\";\n  }\n\n\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <NavBar username={this.state.username} loggedIn={this.state.loggedIn} onLogoutSubmit={this.onLogoutSubmit}/>\n          <Switch>\n            <Route exact path=\"/\" component={MainPage}/>\n            <Route exact path=\"/login\" render={() =>\n              <LoginPage popNext={this.popNext} loggedIn={this.state.loggedIn} onLoginSubmit={this.onLoginSubmit} onRegisterSubmit={this.onRegisterSubmit}/>}\n            />\n            <Route exact path=\"/planner\" render={() =>\n              <Planner addNext={this.addNext} loggedIn={this.state.loggedIn}/>\n            }/>\n            <Route exact path=\"/volunteer\" render={() =>\n              <VolunteerPage addNext={this.addNext} loggedIn={this.state.loggedIn}/>\n            }/>\n            <Route exact path=\"/donate\" component={DonationPage}/>\n            <Route path=\"/event\" component={EventPage}/>\n        </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}